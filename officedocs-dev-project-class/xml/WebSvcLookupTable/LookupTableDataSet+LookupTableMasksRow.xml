<Type Name="LookupTableDataSet+LookupTableMasksRow" FullName="WebSvcLookupTable.LookupTableDataSet+LookupTableMasksRow">
  <TypeSignature Language="C#" Value="public class LookupTableDataSet.LookupTableMasksRow : System.Data.DataRow" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit LookupTableDataSet/LookupTableMasksRow extends System.Data.DataRow" />
  <TypeSignature Language="DocId" Value="T:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow" />
  <TypeSignature Language="VB.NET" Value="Public Class LookupTableDataSet.LookupTableMasksRow&#xA;Inherits DataRow" />
  <TypeSignature Language="C++ CLI" Value="public: ref class LookupTableDataSet::LookupTableMasksRow : System::Data::DataRow" />
  <TypeSignature Language="F#" Value="type LookupTableDataSet.LookupTableMasksRow = class&#xA;    inherit DataRow" />
  <AssemblyInfo>
    <AssemblyName>ProjectServerServices</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.DataRow</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents one lookup table code mask value.</summary>
    <remarks>
      <para>For an example that creates lookup table code masks, see Walkthrough: Creating a Hierarchical Lookup Table. </para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsLT_MASK_STRUCT_LENGTHNull">
      <MemberSignature Language="C#" Value="public bool IsLT_MASK_STRUCT_LENGTHNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsLT_MASK_STRUCT_LENGTHNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.IsLT_MASK_STRUCT_LENGTHNull" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLT_MASK_STRUCT_LENGTHNull () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLT_MASK_STRUCT_LENGTHNull();" />
      <MemberSignature Language="F#" Value="member this.IsLT_MASK_STRUCT_LENGTHNull : unit -&gt; bool" Usage="lookupTableMasksRow.IsLT_MASK_STRUCT_LENGTHNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines whether the <see cref="P:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_MASK_STRUCT_LENGTH" /> property is set to a a null reference (Nothing in Visual Basic) value.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLT_MASK_STRUCT_TYPE_ENUMNull">
      <MemberSignature Language="C#" Value="public bool IsLT_MASK_STRUCT_TYPE_ENUMNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsLT_MASK_STRUCT_TYPE_ENUMNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.IsLT_MASK_STRUCT_TYPE_ENUMNull" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLT_MASK_STRUCT_TYPE_ENUMNull () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLT_MASK_STRUCT_TYPE_ENUMNull();" />
      <MemberSignature Language="F#" Value="member this.IsLT_MASK_STRUCT_TYPE_ENUMNull : unit -&gt; bool" Usage="lookupTableMasksRow.IsLT_MASK_STRUCT_TYPE_ENUMNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines whether the <see cref="P:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_MASK_STRUCT_TYPE_ENUM" /> property is set to a a null reference (Nothing in Visual Basic) value.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLT_MASK_VALUE_SEPARATORNull">
      <MemberSignature Language="C#" Value="public bool IsLT_MASK_VALUE_SEPARATORNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsLT_MASK_VALUE_SEPARATORNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.IsLT_MASK_VALUE_SEPARATORNull" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLT_MASK_VALUE_SEPARATORNull () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLT_MASK_VALUE_SEPARATORNull();" />
      <MemberSignature Language="F#" Value="member this.IsLT_MASK_VALUE_SEPARATORNull : unit -&gt; bool" Usage="lookupTableMasksRow.IsLT_MASK_VALUE_SEPARATORNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Determines whether the <see cref="P:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_MASK_VALUE_SEPARATOR" /> property is set to a a null reference (Nothing in Visual Basic) value.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTablesRow">
      <MemberSignature Language="C#" Value="public WebSvcLookupTable.LookupTableDataSet.LookupTablesRow LookupTablesRow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class WebSvcLookupTable.LookupTableDataSet/LookupTablesRow LookupTablesRow" />
      <MemberSignature Language="DocId" Value="P:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LookupTablesRow" />
      <MemberSignature Language="VB.NET" Value="Public Property LookupTablesRow As LookupTableDataSet.LookupTablesRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property WebSvcLookupTable::LookupTableDataSet::LookupTablesRow ^ LookupTablesRow { WebSvcLookupTable::LookupTableDataSet::LookupTablesRow ^ get(); void set(WebSvcLookupTable::LookupTableDataSet::LookupTablesRow ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LookupTablesRow : WebSvcLookupTable.LookupTableDataSet.LookupTablesRow with get, set" Usage="WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LookupTablesRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcLookupTable.LookupTableDataSet+LookupTablesRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Represents the specific lookup table where the code mask is used.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <example>
          <para>In the following code example, if the <b>lutUid</b> value is the GUID of a lookup table, then <b>lutUidFromMask</b> gets the same value. <b>LookupTableWS</b> is an arbitrary name for a reference to the <b>LookupTable</b> Web service.</para>
          <code>. . .
Guid lutUid = new Guid("23bdb945-eacc-4390-af70-f8644683c5bb");
Guid[] lutUids = { lutUid };

LookupTableWS.LookupTableDataSet lut = 
    lookupTable.ReadLookupTablesByUids(lutUids, false, 1033);
LookupTableWS.LookupTableDataSet.LookupTableMasksRow lutMaskRow = 
    lut.LookupTableMasks[0];
LookupTableWS.LookupTableDataSet.LookupTablesRow lutRow = 
    lutMaskRow.LookupTablesRow;
Guid lutUidFromMask = lutRow.LT_UID;
. . .</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="LT_MASK_STRUCT_LENGTH">
      <MemberSignature Language="C#" Value="public int LT_MASK_STRUCT_LENGTH { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LT_MASK_STRUCT_LENGTH" />
      <MemberSignature Language="DocId" Value="P:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_MASK_STRUCT_LENGTH" />
      <MemberSignature Language="VB.NET" Value="Public Property LT_MASK_STRUCT_LENGTH As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LT_MASK_STRUCT_LENGTH { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LT_MASK_STRUCT_LENGTH : int with get, set" Usage="WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_MASK_STRUCT_LENGTH" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the number of characters, numbers, or letters in the code mask.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If <b>LT_MASK_STRUCT_LENGTH</b> = 0, Project Web App shows the length as Any in the Code mask grid on the Edit Lookup Table page.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LT_MASK_STRUCT_LEVEL">
      <MemberSignature Language="C#" Value="public int LT_MASK_STRUCT_LEVEL { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LT_MASK_STRUCT_LEVEL" />
      <MemberSignature Language="DocId" Value="P:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_MASK_STRUCT_LEVEL" />
      <MemberSignature Language="VB.NET" Value="Public Property LT_MASK_STRUCT_LEVEL As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LT_MASK_STRUCT_LEVEL { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LT_MASK_STRUCT_LEVEL : int with get, set" Usage="WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_MASK_STRUCT_LEVEL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the outline level of the code mask.</summary>
        <value>To be added.</value>
        <remarks>
          <para>To help understand the <b>LT_MASK_STRUCT_LEVEL</b> property, suppose <b>lut</b> is a <b>LookupTableWS.LookupTableDataSet</b> object which contains three lookup table mask rows (<b>LookupTableWS</b> is the name for a reference to the LookupTable Web service). If the full value of a lookup table entry is WA.King.Redmond, for example, and the code mask preview in the Edit Lookup Table page of Project Web App is AA.*.*, then </para>
          <list type="bullet">
            <item>
              <description>lut.LookupTableMasks[0].LT_MASK_STRUCT_LEVEL = 1, </description>
            </item>
            <item>
              <description>lut.LookupTableMasks[1].LT_MASK_STRUCT_LEVEL = 2, and </description>
            </item>
            <item>
              <description>lut.LookupTableMasks[2].LT_MASK_STRUCT_LEVEL = 3.</description>
            </item>
          </list>
          <para>If you serialize <b>lut</b> to an XML file, the <b>LookupTableMasks</b> elements have the following values.</para>
          <code>&amp;lt;LookupTableMasks&amp;gt;
    &amp;lt;LT_UID&amp;gt;5ee9b465-489c-4083-bb26-0694918103f6&amp;lt;/LT_UID&amp;gt;
    &amp;lt;LT_MASK_STRUCT_LEVEL&amp;gt;1&amp;lt;/LT_MASK_STRUCT_LEVEL&amp;gt;
    &amp;lt;LT_MASK_STRUCT_TYPE_ENUM&amp;gt;1&amp;lt;/LT_MASK_STRUCT_TYPE_ENUM&amp;gt;
    &amp;lt;LT_MASK_STRUCT_LENGTH&amp;gt;2&amp;lt;/LT_MASK_STRUCT_LENGTH&amp;gt;
    &amp;lt;LT_MASK_VALUE_SEPARATOR&amp;gt;.&amp;lt;/LT_MASK_VALUE_SEPARATOR&amp;gt;
&amp;lt;/LookupTableMasks&amp;gt;
&amp;lt;LookupTableMasks&amp;gt;
    &amp;lt;LT_UID&amp;gt;5ee9b465-489c-4083-bb26-0694918103f6&amp;lt;/LT_UID&amp;gt;
    &amp;lt;LT_MASK_STRUCT_LEVEL&amp;gt;2&amp;lt;/LT_MASK_STRUCT_LEVEL&amp;gt;
    &amp;lt;LT_MASK_STRUCT_TYPE_ENUM&amp;gt;3&amp;lt;/LT_MASK_STRUCT_TYPE_ENUM&amp;gt;
    &amp;lt;LT_MASK_STRUCT_LENGTH&amp;gt;0&amp;lt;/LT_MASK_STRUCT_LENGTH&amp;gt;
    &amp;lt;LT_MASK_VALUE_SEPARATOR&amp;gt;.&amp;lt;/LT_MASK_VALUE_SEPARATOR&amp;gt;
&amp;lt;/LookupTableMasks&amp;gt;
&amp;lt;LookupTableMasks&amp;gt;
    &amp;lt;LT_UID&amp;gt;5ee9b465-489c-4083-bb26-0694918103f6&amp;lt;/LT_UID&amp;gt;
    &amp;lt;LT_MASK_STRUCT_LEVEL&amp;gt;3&amp;lt;/LT_MASK_STRUCT_LEVEL&amp;gt;
    &amp;lt;LT_MASK_STRUCT_TYPE_ENUM&amp;gt;3&amp;lt;/LT_MASK_STRUCT_TYPE_ENUM&amp;gt;
    &amp;lt;LT_MASK_STRUCT_LENGTH&amp;gt;0&amp;lt;/LT_MASK_STRUCT_LENGTH&amp;gt;
    &amp;lt;LT_MASK_VALUE_SEPARATOR&amp;gt;.&amp;lt;/LT_MASK_VALUE_SEPARATOR&amp;gt;
&amp;lt;/LookupTableMasks&amp;gt;</code>
          <para>For more information and examples, see Walkthrough: Creating a Hierarchical Lookup Table. </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LT_MASK_STRUCT_TYPE_ENUM">
      <MemberSignature Language="C#" Value="public byte LT_MASK_STRUCT_TYPE_ENUM { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8 LT_MASK_STRUCT_TYPE_ENUM" />
      <MemberSignature Language="DocId" Value="P:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_MASK_STRUCT_TYPE_ENUM" />
      <MemberSignature Language="VB.NET" Value="Public Property LT_MASK_STRUCT_TYPE_ENUM As Byte" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Byte LT_MASK_STRUCT_TYPE_ENUM { System::Byte get(); void set(System::Byte value); };" />
      <MemberSignature Language="F#" Value="member this.LT_MASK_STRUCT_TYPE_ENUM : byte with get, set" Usage="WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_MASK_STRUCT_TYPE_ENUM" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates the type of data for a lookup table mask structure, specified by the <see cref="T:Microsoft.Office.Project.Server.Library.LookupTables.MaskSequence" /> enumeration.</summary>
        <value>To be added.</value>
        <remarks>
          <para>To help understand the <b>LT_MASK_STRUCT_TYPE_ENUM</b> property, suppose <b>lut</b> is a <b>LookupTableWS.LookupTableDataSet</b> object which contains three lookup table mask rows (<b>LookupTableWS</b> is the name for a reference to the LookupTable Web service). If the full value of a lookup table entry is WA.King.Redmond, for example, and the code mask preview in the Edit Lookup Table page of Project Web App is AA.*.*, then </para>
          <list type="bullet">
            <item>
              <description>lut.LookupTableMasks[0].LT_MASK_STRUCT_TYPE_ENUM = <see cref="F:Microsoft.Office.Project.Server.Library.LookupTables.MaskSequence.UPPERCASE" />, and both</description>
            </item>
            <item>
              <description>lut.LookupTableMasks[1].LT_MASK_STRUCT_TYPE_ENUM and lut.LookupTableMasks[2].LT_MASK_STRUCT_TYPE_ENUM have the value of <see cref="F:Microsoft.Office.Project.Server.Library.LookupTables.MaskSequence.CHARACTERS" />.</description>
            </item>
          </list>
          <para>If you serialize <b>lut</b> to an XML file, the <b>LookupTableMasks</b> elements have the following values.</para>
          <code>&amp;lt;LookupTableMasks&amp;gt;
    &amp;lt;LT_UID&amp;gt;5ee9b465-489c-4083-bb26-0694918103f6&amp;lt;/LT_UID&amp;gt;
    &amp;lt;LT_MASK_STRUCT_LEVEL&amp;gt;1&amp;lt;/LT_MASK_STRUCT_LEVEL&amp;gt;
    &amp;lt;LT_MASK_STRUCT_TYPE_ENUM&amp;gt;1&amp;lt;/LT_MASK_STRUCT_TYPE_ENUM&amp;gt;
    &amp;lt;LT_MASK_STRUCT_LENGTH&amp;gt;2&amp;lt;/LT_MASK_STRUCT_LENGTH&amp;gt;
    &amp;lt;LT_MASK_VALUE_SEPARATOR&amp;gt;.&amp;lt;/LT_MASK_VALUE_SEPARATOR&amp;gt;
&amp;lt;/LookupTableMasks&amp;gt;
&amp;lt;LookupTableMasks&amp;gt;
    &amp;lt;LT_UID&amp;gt;5ee9b465-489c-4083-bb26-0694918103f6&amp;lt;/LT_UID&amp;gt;
    &amp;lt;LT_MASK_STRUCT_LEVEL&amp;gt;2&amp;lt;/LT_MASK_STRUCT_LEVEL&amp;gt;
    &amp;lt;LT_MASK_STRUCT_TYPE_ENUM&amp;gt;3&amp;lt;/LT_MASK_STRUCT_TYPE_ENUM&amp;gt;
    &amp;lt;LT_MASK_STRUCT_LENGTH&amp;gt;0&amp;lt;/LT_MASK_STRUCT_LENGTH&amp;gt;
    &amp;lt;LT_MASK_VALUE_SEPARATOR&amp;gt;.&amp;lt;/LT_MASK_VALUE_SEPARATOR&amp;gt;
&amp;lt;/LookupTableMasks&amp;gt;
&amp;lt;LookupTableMasks&amp;gt;
    &amp;lt;LT_UID&amp;gt;5ee9b465-489c-4083-bb26-0694918103f6&amp;lt;/LT_UID&amp;gt;
    &amp;lt;LT_MASK_STRUCT_LEVEL&amp;gt;3&amp;lt;/LT_MASK_STRUCT_LEVEL&amp;gt;
    &amp;lt;LT_MASK_STRUCT_TYPE_ENUM&amp;gt;3&amp;lt;/LT_MASK_STRUCT_TYPE_ENUM&amp;gt;
    &amp;lt;LT_MASK_STRUCT_LENGTH&amp;gt;0&amp;lt;/LT_MASK_STRUCT_LENGTH&amp;gt;
    &amp;lt;LT_MASK_VALUE_SEPARATOR&amp;gt;.&amp;lt;/LT_MASK_VALUE_SEPARATOR&amp;gt;
&amp;lt;/LookupTableMasks&amp;gt;</code>
          <para>For more information and examples, see Walkthrough: Creating a Hierarchical Lookup Table. </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LT_MASK_VALUE_SEPARATOR">
      <MemberSignature Language="C#" Value="public string LT_MASK_VALUE_SEPARATOR { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LT_MASK_VALUE_SEPARATOR" />
      <MemberSignature Language="DocId" Value="P:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_MASK_VALUE_SEPARATOR" />
      <MemberSignature Language="VB.NET" Value="Public Property LT_MASK_VALUE_SEPARATOR As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LT_MASK_VALUE_SEPARATOR { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LT_MASK_VALUE_SEPARATOR : string with get, set" Usage="WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_MASK_VALUE_SEPARATOR" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the separator character used in a lookup table mask for lookup table values.</summary>
        <value>To be added.</value>
        <remarks>
          <para>To help understand the <b>LT_MASK_VALUE_SEPARATOR</b> property, suppose <b>lut</b> is a <b>LookupTableWS.LookupTableDataSet</b> object which contains three lookup table mask rows (<b>LookupTableWS</b> is the name for a reference to the LookupTable Web service). If the full value of a lookup table entry is WA.King.Redmond, for example, and the code mask preview in the Edit Lookup Table page of Project Web App is AA.*.*, then the value of lut.LookupTableMasks[0].LT_MASK_VALUE_SEPARATOR = ".". </para>
          <para>If you serialize <b>lut</b> to an XML file, the first <b>LookupTableMasks</b> element has the following values.</para>
          <code>&amp;lt;LookupTableMasks&amp;gt;
    &amp;lt;LT_UID&amp;gt;5ee9b465-489c-4083-bb26-0694918103f6&amp;lt;/LT_UID&amp;gt;
    &amp;lt;LT_MASK_STRUCT_LEVEL&amp;gt;1&amp;lt;/LT_MASK_STRUCT_LEVEL&amp;gt;
    &amp;lt;LT_MASK_STRUCT_TYPE_ENUM&amp;gt;1&amp;lt;/LT_MASK_STRUCT_TYPE_ENUM&amp;gt;
    &amp;lt;LT_MASK_STRUCT_LENGTH&amp;gt;2&amp;lt;/LT_MASK_STRUCT_LENGTH&amp;gt;
    &amp;lt;LT_MASK_VALUE_SEPARATOR&amp;gt;.&amp;lt;/LT_MASK_VALUE_SEPARATOR&amp;gt;
&amp;lt;/LookupTableMasks&amp;gt;</code>
          <para>For more information and examples, see Walkthrough: Creating a Hierarchical Lookup Table. </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LT_UID">
      <MemberSignature Language="C#" Value="public Guid LT_UID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid LT_UID" />
      <MemberSignature Language="DocId" Value="P:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_UID" />
      <MemberSignature Language="VB.NET" Value="Public Property LT_UID As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid LT_UID { Guid get(); void set(Guid value); };" />
      <MemberSignature Language="F#" Value="member this.LT_UID : Guid with get, set" Usage="WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_UID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specifies the unique identifier of the lookup table that uses the code mask.</summary>
        <value>To be added.</value>
        <remarks>
          <para>For an example that uses <b>LT_UID</b>, see Walkthrough: Creating a Hierarchical Lookup Table. </para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLT_MASK_STRUCT_LENGTHNull">
      <MemberSignature Language="C#" Value="public void SetLT_MASK_STRUCT_LENGTHNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLT_MASK_STRUCT_LENGTHNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.SetLT_MASK_STRUCT_LENGTHNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLT_MASK_STRUCT_LENGTHNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLT_MASK_STRUCT_LENGTHNull();" />
      <MemberSignature Language="F#" Value="member this.SetLT_MASK_STRUCT_LENGTHNull : unit -&gt; unit" Usage="lookupTableMasksRow.SetLT_MASK_STRUCT_LENGTHNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the <see cref="P:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_MASK_STRUCT_LENGTH" /> property to a a null reference (Nothing in Visual Basic) value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLT_MASK_STRUCT_TYPE_ENUMNull">
      <MemberSignature Language="C#" Value="public void SetLT_MASK_STRUCT_TYPE_ENUMNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLT_MASK_STRUCT_TYPE_ENUMNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.SetLT_MASK_STRUCT_TYPE_ENUMNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLT_MASK_STRUCT_TYPE_ENUMNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLT_MASK_STRUCT_TYPE_ENUMNull();" />
      <MemberSignature Language="F#" Value="member this.SetLT_MASK_STRUCT_TYPE_ENUMNull : unit -&gt; unit" Usage="lookupTableMasksRow.SetLT_MASK_STRUCT_TYPE_ENUMNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the <see cref="P:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_MASK_STRUCT_TYPE_ENUM" /> property to a a null reference (Nothing in Visual Basic) value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLT_MASK_VALUE_SEPARATORNull">
      <MemberSignature Language="C#" Value="public void SetLT_MASK_VALUE_SEPARATORNull ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLT_MASK_VALUE_SEPARATORNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.SetLT_MASK_VALUE_SEPARATORNull" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetLT_MASK_VALUE_SEPARATORNull ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLT_MASK_VALUE_SEPARATORNull();" />
      <MemberSignature Language="F#" Value="member this.SetLT_MASK_VALUE_SEPARATORNull : unit -&gt; unit" Usage="lookupTableMasksRow.SetLT_MASK_VALUE_SEPARATORNull " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerNonUserCode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the <see cref="P:WebSvcLookupTable.LookupTableDataSet.LookupTableMasksRow.LT_MASK_VALUE_SEPARATOR" /> property to a a null reference (Nothing in Visual Basic) value.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>