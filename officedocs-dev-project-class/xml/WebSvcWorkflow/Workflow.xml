<Type Name="Workflow" FullName="WebSvcWorkflow.Workflow">
  <TypeSignature Language="C#" Value="public class Workflow : System.Web.Services.Protocols.SoapHttpClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Workflow extends System.Web.Services.Protocols.SoapHttpClientProtocol" />
  <TypeSignature Language="DocId" Value="T:WebSvcWorkflow.Workflow" />
  <TypeSignature Language="VB.NET" Value="Public Class Workflow&#xA;Inherits SoapHttpClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class Workflow : System::Web::Services::Protocols::SoapHttpClientProtocol" />
  <TypeSignature Language="F#" Value="type Workflow = class&#xA;    inherit SoapHttpClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>ProjectServerServices</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.SoapHttpClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.Services.WebServiceBinding(Name="WorkflowSoap", Namespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web methods for managing Project Server workflows for demand management.</summary>
    <remarks>
      <para>For more information, see Workflow and Demand Management.</para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Workflow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Workflow();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a <b>Workflow</b> object from the ASMX-based <b>Workflow</b> web service.</summary>
        <remarks>
          <para>To create an object that is equivalent to <b>Workflow</b> by using the Windows Communication Foundation (WCF) API, use one of the <b>WorkflowClient</b> constructors.</para>
          <para />
        </remarks>
        <example>
          <para>In the following statement, <b>WorkflowWebSvc</b> is an arbitrary namespace for the ASMX-based <b>Workflow</b> web service.</para>
          <code>private static WorkflowWebSvc.Workflow workflow = new WorkflowWebSvc.Workflow();</code>
          <para>In the following statement, <b>SvcWorkflow</b> is an arbitrary namespace for the WCF-based <b>Workflow</b> service. The <paramref name="endpt" /> parameter is a <b>String</b> value that specifies the name of the client endpoint address in the app.config file (or in the web.config file for web applications).</para>
          <code>private static SvcWorkflow.WorkflowClient workflowClient = new SvcWorkflow.WorkflowClient(endpt);</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="CreateEnterpriseProjectType">
      <MemberSignature Language="C#" Value="public void CreateEnterpriseProjectType (WebSvcWorkflow.WorkflowDataSet workflowDS);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateEnterpriseProjectType(class WebSvcWorkflow.WorkflowDataSet workflowDS) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.CreateEnterpriseProjectType(WebSvcWorkflow.WorkflowDataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateEnterpriseProjectType (workflowDS As WorkflowDataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateEnterpriseProjectType(WebSvcWorkflow::WorkflowDataSet ^ workflowDS);" />
      <MemberSignature Language="F#" Value="member this.CreateEnterpriseProjectType : WebSvcWorkflow.WorkflowDataSet -&gt; unit" Usage="workflow.CreateEnterpriseProjectType workflowDS" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/CreateEnterpriseProjectType", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDS" Type="WebSvcWorkflow.WorkflowDataSet" />
      </Parameters>
      <Docs>
        <param name="workflowDS">Contains the EPT information. </param>
        <summary>Creates a template for an enterprise project type (EPT).</summary>
        <remarks>
          <para>The <see cref="T:WebSvcWorkflow.WorkflowDataSet.EnterpriseProjectTypeRow" /> in the <b>WorkflowDataSet.EnterpriseProjectTypeDataTable</b> contains the EPT information.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflowPhase">
      <MemberSignature Language="C#" Value="public void CreateWorkflowPhase (WebSvcWorkflow.WorkflowDataSet workflowDS);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateWorkflowPhase(class WebSvcWorkflow.WorkflowDataSet workflowDS) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.CreateWorkflowPhase(WebSvcWorkflow.WorkflowDataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateWorkflowPhase (workflowDS As WorkflowDataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateWorkflowPhase(WebSvcWorkflow::WorkflowDataSet ^ workflowDS);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflowPhase : WebSvcWorkflow.WorkflowDataSet -&gt; unit" Usage="workflow.CreateWorkflowPhase workflowDS" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/CreateWorkflowPhase", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDS" Type="WebSvcWorkflow.WorkflowDataSet" />
      </Parameters>
      <Docs>
        <param name="workflowDS">Contains the workflow phase information.</param>
        <summary>Creates a workflow phase.</summary>
        <remarks>
          <para>The <see cref="T:WebSvcWorkflow.WorkflowDataSet.WorkflowPhaseRow" /> in the <b>WorkflowDataSet.WorkflowPhaseDataTable</b> contains the phase information.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateWorkflowStage">
      <MemberSignature Language="C#" Value="public void CreateWorkflowStage (WebSvcWorkflow.WorkflowDataSet workflowDS);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateWorkflowStage(class WebSvcWorkflow.WorkflowDataSet workflowDS) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.CreateWorkflowStage(WebSvcWorkflow.WorkflowDataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateWorkflowStage (workflowDS As WorkflowDataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateWorkflowStage(WebSvcWorkflow::WorkflowDataSet ^ workflowDS);" />
      <MemberSignature Language="F#" Value="member this.CreateWorkflowStage : WebSvcWorkflow.WorkflowDataSet -&gt; unit" Usage="workflow.CreateWorkflowStage workflowDS" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/CreateWorkflowStage", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDS" Type="WebSvcWorkflow.WorkflowDataSet" />
      </Parameters>
      <Docs>
        <param name="workflowDS">Contains the workflow stage information.</param>
        <summary>Creates a workflow stage.</summary>
        <remarks>
          <para>The <see cref="T:WebSvcWorkflow.WorkflowDataSet.WorkflowStageRow" /> in the <b>WorkflowDataSet.WorkflowStageDataTable</b> contains the phase information.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
        <example>
          <para>The example uses the <b>SvcWorkflow</b> namespace in the ProjectServerServices.dll proxy assembly. The <b>ConfigClientEndpoints</b> method uses an app.config file for setting the WCF binding, behavior, and endpoint. For information about creating a PSI proxy assembly and an app.config file, see Prerequisites for WCF-Based Code Samples.</para>
          <para>The <b>CreateWorkflowStage</b> method is used to create a new stage, <b>Test Stage 5</b>, in the <b>Create</b> phase. After the stage is created, the dataset <b>workflowDS</b> is again written to <b>NewWorkflowStageInfo.xml</b>. Following is a snapshot of the xml file.</para>
          <code>&amp;lt;?xml version="1.0" standalone="yes"?&amp;gt;
&amp;lt;WorkflowDataSet xmlns="http://schemas.microsoft.com/office/project/server/webservices/WorkflowDataSet/"&amp;gt;
&amp;lt;WorkflowPhase&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;d8bc257b-c2ec-4186-8a5b-44b5b7f21d82&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Create&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_DESCRIPTION&amp;gt;&lt;/span&gt;Project information is captured in this phase&amp;lt;/PHASE_DESCRIPTION&amp;gt;
&amp;lt;/WorkflowPhase&amp;gt;
&amp;lt;WorkflowStage&amp;gt;
&lt;span class="label"&gt;&amp;lt;STAGE_UID&amp;gt;&lt;/span&gt;460f6b0c-1216-46b7-a119-053c32b10d38&amp;lt;/STAGE_UID&amp;gt;
&amp;lt;STAGE_NAME&amp;gt;Test Stage 5&amp;lt;/STAGE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;d8bc257b-c2ec-4186-8a5b-44b5b7f21d82&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Create&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;STAGE_DESCRIPTION&amp;gt;&lt;/span&gt;Adding a test stage row&amp;lt;/STAGE_DESCRIPTION&amp;gt;
&lt;span class="label"&gt;&amp;lt;CHECKIN_REQUIRED&amp;gt;&lt;/span&gt;false&amp;lt;/CHECKIN_REQUIRED&amp;gt;
&lt;span class="label"&gt;&amp;lt;STATUS_PDP_UID&amp;gt;&lt;/span&gt;a7aa1c62-9577-447c-823e-bdb161f9000d&amp;lt;/STATUS_PDP_UID&amp;gt;
&amp;lt;/WorkflowStage&amp;gt;</code>
          <para>Following is the complete sample code.</para>
          <code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using System.ServiceModel;

namespace Microsoft.SDK.Project.Samples.WorkFlowTest
{
    class WorkFlowProject
    {
        private static SvcWorkflow.WorkflowClient workFlowClient;
        private const string WORK_ENDPOINT = "basicHttp_Workflow";
        private const string OUTPUT_FILES = @"C:\Projects\Samples\Output\";
        private static string outFilePathWorkFlowStageList;
        private static string outFilePathNewWorkFlowStage;
        private static string outFilePathStageInfo;
        private static string outFilePathUpdatedStage;

        static void Main(string[] args)
        {
            // Configure client endpoints.
            ConfigClientEndpoints(WORK_ENDPOINT);

            Guid[] workFlowID = new Guid[1];
            workFlowID[0] = new Guid("e663d9dc-f78d-4a4e-ac21-b28d22865f58");

            // If output directory does not exist, create it.
            if (!Directory.Exists(OUTPUT_FILES))
            {
                Directory.CreateDirectory(OUTPUT_FILES);
            }

            outFilePathWorkFlowStageList = OUTPUT_FILES + "WorkFlowStageList.xml";
            outFilePathNewWorkFlowStage = OUTPUT_FILES + "NewWorkflowStageInfo.xml";
            outFilePathStageInfo = OUTPUT_FILES + "StageInfo.xml";
            outFilePathUpdatedStage = OUTPUT_FILES + "UpdatedStage.xml";

            // Create a workflow dataset.
            SvcWorkflow.WorkflowDataSet workFlowDS = new SvcWorkflow.WorkflowDataSet();

            // List the workflow stages.
            workFlowDS = ListWorkflowStages(workFlowDS);

            // Create a new workflow stage.
            CreateWorkflowStageTest(workFlowDS);

            // Get workflow stage properties for a given stage.
            GetStageInfo();
        }
                
        // Read and display the properties of a stage, given the stage GUID.
        private static void GetStageInfo()
        {
            SvcWorkflow.WorkflowDataSet stageInfoDS = new SvcWorkflow.WorkflowDataSet();
            string stageName = "TestStage10";
            
            Guid stageGuid1 = new Guid("a8a158d1-a9b9-41d7-a676-d199118221c7");
            stageInfoDS = workFlowClient.ReadWorkflowStage(stageGuid1);

            Console.WriteLine("\nSee XML output of the WorkFlowDataSet at {0}",
               outFilePathStageInfo);

            // Update the stage name.
            UpdateStage(stageInfoDS, stageName, stageGuid1);

            // Get the updated stage info.
            stageInfoDS = workFlowClient.ReadWorkflowStage(stageGuid1);
            stageInfoDS.WriteXml(outFilePathStageInfo);
            Console.ReadKey();
        }
               
        // Update the stage name.
        private static void UpdateStage(SvcWorkflow.WorkflowDataSet stageInfoDS, string stageName, Guid stageGuid1)
        {
            SvcWorkflow.WorkflowDataSet.WorkflowStageRow sRow;
            sRow = stageInfoDS.WorkflowStage.FindBySTAGE_UID(stageGuid1);
            sRow.STAGE_NAME = stageName;
            Console.WriteLine("Updating the stage name........");

            workFlowClient.UpdateWorkflowStage(stageInfoDS);

            // Write the updated stage info to an xml file.
            stageInfoDS.WriteXml(outFilePathUpdatedStage);
            Console.WriteLine("Stage name updated!");
            Console.WriteLine("\nSee XML output of the Updated WorkFlowDataSet at {0}",
            outFilePathUpdatedStage);
        }

        // Create a workflow stage.
        private static void CreateWorkflowStageTest(SvcWorkflow.WorkflowDataSet workFlowDS)
        {
            // GUID of the Create phase.
            Guid phaseGuid = new Guid("d8bc257b-c2ec-4186-8a5b-44b5b7f21d82 ");  

            Guid statusPDPId = new Guid("A7AA1C62-9577-447C-823E-BDB161F9000D");
            Guid pdp_uid = new Guid("659FF164-1297-4B64-B813-489566774E27");
            Guid stageUid = Guid.NewGuid();
                       
            // Create a workflow stage row.
            SvcWorkflow.WorkflowDataSet.WorkflowStageRow workflowstageRow = 
                workFlowDS.WorkflowStage.NewWorkflowStageRow();
            workflowstageRow.STAGE_NAME = "Test Stage 5";
            workflowstageRow.STAGE_DESCRIPTION = "Adding a test stage row";
            workflowstageRow.PHASE_NAME = "Create";
            workflowstageRow.PHASE_UID = phaseGuid;
            workflowstageRow.CHECKIN_REQUIRED = false;
            workflowstageRow.STAGE_UID = stageUid;
            workflowstageRow.STATUS_PDP_UID = statusPDPId;
            workFlowDS.WorkflowStage.AddWorkflowStageRow(workflowstageRow);

            // Add a project details page for the stage that was created previously.
            SvcWorkflow.WorkflowDataSet.WorkflowStagePDPsRow pdpRow = 
                workFlowDS.WorkflowStagePDPs.NewWorkflowStagePDPsRow();
            pdpRow.STAGE_UID = stageUid;
            pdpRow.PDP_UID = pdp_uid;
            pdpRow.PDP_NAME = "Project Information";
            pdpRow.PDP_POSITION = 0;
            pdpRow.PDP_ID = 4;
            pdpRow.PDP_REQUIRES_ATTENTION = false;
            workFlowDS.WorkflowStagePDPs.AddWorkflowStagePDPsRow(pdpRow);
        
            // Create the stage.
            workFlowClient.CreateWorkflowStage(workFlowDS);
            
            // Write the dataset with the new stage to an xml file.
            workFlowDS.WriteXml(outFilePathNewWorkFlowStage);
            Console.WriteLine("\nSee XML output of the WorkFlowDataSet at {0}",
               outFilePathNewWorkFlowStage);
        }

        // List the workflow stages in the dataset.
        private static SvcWorkflow.WorkflowDataSet ListWorkflowStages(SvcWorkflow.WorkflowDataSet workFlowDS)
        {
            workFlowDS = workFlowClient.ReadWorkflowStageList();
            workFlowDS.WriteXml(outFilePathWorkFlowStageList);

            Console.WriteLine("\nSee XML output of the WorkFlowDataSet at {0}",
               outFilePathWorkFlowStageList);
            return workFlowDS;
        }

        // Configure the custom field client endpoints.
        public static void ConfigClientEndpoints(string endpt)
        {
             workFlowClient = new SvcWorkflow.WorkflowClient(endpt);
           
        }
    }
}

</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="DeleteEnterpriseProjectTypes">
      <MemberSignature Language="C#" Value="public void DeleteEnterpriseProjectTypes (Guid[] enterpriseProjectTypeUid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteEnterpriseProjectTypes(valuetype System.Guid[] enterpriseProjectTypeUid) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.DeleteEnterpriseProjectTypes(System.Guid[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteEnterpriseProjectTypes (enterpriseProjectTypeUid As Guid())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteEnterpriseProjectTypes(cli::array &lt;Guid&gt; ^ enterpriseProjectTypeUid);" />
      <MemberSignature Language="F#" Value="member this.DeleteEnterpriseProjectTypes : Guid[] -&gt; unit" Usage="workflow.DeleteEnterpriseProjectTypes enterpriseProjectTypeUid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/DeleteEnterpriseProjectTypes", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enterpriseProjectTypeUid" Type="System.Guid[]" />
      </Parameters>
      <Docs>
        <param name="enterpriseProjectTypeUid">An array of GUIDs, of the EPTs to delete.</param>
        <summary>Deletes the specified enterprise project types (EPTs).</summary>
        <remarks>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteWorkflowPhases">
      <MemberSignature Language="C#" Value="public void DeleteWorkflowPhases (Guid[] workflowPhaseUid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWorkflowPhases(valuetype System.Guid[] workflowPhaseUid) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.DeleteWorkflowPhases(System.Guid[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteWorkflowPhases (workflowPhaseUid As Guid())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWorkflowPhases(cli::array &lt;Guid&gt; ^ workflowPhaseUid);" />
      <MemberSignature Language="F#" Value="member this.DeleteWorkflowPhases : Guid[] -&gt; unit" Usage="workflow.DeleteWorkflowPhases workflowPhaseUid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/DeleteWorkflowPhases", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowPhaseUid" Type="System.Guid[]" />
      </Parameters>
      <Docs>
        <param name="workflowPhaseUid">An array of GUIDs of the workflow phases to delete.</param>
        <summary>Deletes the specified workflow phases.</summary>
        <remarks>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteWorkflowStages">
      <MemberSignature Language="C#" Value="public void DeleteWorkflowStages (Guid[] workflowStageUid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteWorkflowStages(valuetype System.Guid[] workflowStageUid) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.DeleteWorkflowStages(System.Guid[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteWorkflowStages (workflowStageUid As Guid())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteWorkflowStages(cli::array &lt;Guid&gt; ^ workflowStageUid);" />
      <MemberSignature Language="F#" Value="member this.DeleteWorkflowStages : Guid[] -&gt; unit" Usage="workflow.DeleteWorkflowStages workflowStageUid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/DeleteWorkflowStages", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowStageUid" Type="System.Guid[]" />
      </Parameters>
      <Docs>
        <param name="workflowStageUid">An array of GUIDs, of the workflow stages to delete.</param>
        <summary>Deletes the specified workflow stages.</summary>
        <remarks>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueUpdateProjectWorkflows">
      <MemberSignature Language="C#" Value="public void QueueUpdateProjectWorkflows (WebSvcWorkflow.WorkflowDataSet dsWorkflow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QueueUpdateProjectWorkflows(class WebSvcWorkflow.WorkflowDataSet dsWorkflow) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.QueueUpdateProjectWorkflows(WebSvcWorkflow.WorkflowDataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub QueueUpdateProjectWorkflows (dsWorkflow As WorkflowDataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void QueueUpdateProjectWorkflows(WebSvcWorkflow::WorkflowDataSet ^ dsWorkflow);" />
      <MemberSignature Language="F#" Value="member this.QueueUpdateProjectWorkflows : WebSvcWorkflow.WorkflowDataSet -&gt; unit" Usage="workflow.QueueUpdateProjectWorkflows dsWorkflow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/QueueUpdateProjectWorkflows", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dsWorkflow" Type="WebSvcWorkflow.WorkflowDataSet" />
      </Parameters>
      <Docs>
        <param name="dsWorkflow">Contains the update data for the Project Server workflows.</param>
        <summary>Updates project workflow data.</summary>
        <remarks>
          <para>Each <see cref="T:WebSvcWorkflow.WorkflowDataSet.UpdateProjectWorkflowsRow" /> in <b>WorkflowDataSet.UpdateProjectWorkflowsDataTable</b> specifies a workflow to update.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>Non-Standard</term>
              <description>You must have either the <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" /> global permission or the <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ChangeWorkflow" /> global permission. If you have <b>ChangeWorkflow</b> permission, you must also have the <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityCategoryPermission.OpenProject" /> category permission and the <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityCategoryPermission.SaveProject" /> category permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAvailableEnterpriseProjectTypes">
      <MemberSignature Language="C#" Value="public WebSvcWorkflow.WorkflowDataSet ReadAvailableEnterpriseProjectTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class WebSvcWorkflow.WorkflowDataSet ReadAvailableEnterpriseProjectTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.ReadAvailableEnterpriseProjectTypes" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAvailableEnterpriseProjectTypes () As WorkflowDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebSvcWorkflow::WorkflowDataSet ^ ReadAvailableEnterpriseProjectTypes();" />
      <MemberSignature Language="F#" Value="member this.ReadAvailableEnterpriseProjectTypes : unit -&gt; WebSvcWorkflow.WorkflowDataSet" Usage="workflow.ReadAvailableEnterpriseProjectTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/ReadAvailableEnterpriseProjectTypes", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcWorkflow.WorkflowDataSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads the enterprise project types (EPTs) that are available to the user for creating a project.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The departments assigned to the user and the departments assigned to EPTs affect what EPTs are available.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ChangeWorkflow" />
              </term>
              <description>Allows a user to change workflows. Global permission.</description>
            </item>
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows a user to manage workflows. Global permission.</description>
            </item>
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.NewProject" />
              </term>
              <description>Allows a user to add a new project to the Project Server database. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEnterpriseProjectType">
      <MemberSignature Language="C#" Value="public WebSvcWorkflow.WorkflowDataSet ReadEnterpriseProjectType (Guid enterpriseProjectTypeUid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class WebSvcWorkflow.WorkflowDataSet ReadEnterpriseProjectType(valuetype System.Guid enterpriseProjectTypeUid) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.ReadEnterpriseProjectType(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadEnterpriseProjectType (enterpriseProjectTypeUid As Guid) As WorkflowDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebSvcWorkflow::WorkflowDataSet ^ ReadEnterpriseProjectType(Guid enterpriseProjectTypeUid);" />
      <MemberSignature Language="F#" Value="member this.ReadEnterpriseProjectType : Guid -&gt; WebSvcWorkflow.WorkflowDataSet" Usage="workflow.ReadEnterpriseProjectType enterpriseProjectTypeUid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/ReadEnterpriseProjectType", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcWorkflow.WorkflowDataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enterpriseProjectTypeUid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="enterpriseProjectTypeUid">The GUID of the EPT.</param>
        <summary>Gets information about the specified enterprise project type (EPT).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The <see cref="T:WebSvcWorkflow.WorkflowDataSet.EnterpriseProjectTypeRow" /> in <b>WorkflowDataSet.EnterpriseProjectTypeDataTable</b> contains the EPT information.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.NewProject" />
              </term>
              <description>Allows the user to create and publish new projects. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEnterpriseProjectTypeList">
      <MemberSignature Language="C#" Value="public WebSvcWorkflow.WorkflowDataSet ReadEnterpriseProjectTypeList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class WebSvcWorkflow.WorkflowDataSet ReadEnterpriseProjectTypeList() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.ReadEnterpriseProjectTypeList" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadEnterpriseProjectTypeList () As WorkflowDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebSvcWorkflow::WorkflowDataSet ^ ReadEnterpriseProjectTypeList();" />
      <MemberSignature Language="F#" Value="member this.ReadEnterpriseProjectTypeList : unit -&gt; WebSvcWorkflow.WorkflowDataSet" Usage="workflow.ReadEnterpriseProjectTypeList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/ReadEnterpriseProjectTypeList", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcWorkflow.WorkflowDataSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads the list of enterprise project types (EPTs) that are defined in Project Server.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Each <see cref="T:WebSvcWorkflow.WorkflowDataSet.EnterpriseProjectTypeRow" /> in <b>WorkflowDataSet.EnterpriseProjectTypeDataTable</b> contains the information for one EPT.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ChangeWorkflow" />
              </term>
              <description>Allows a user to change workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadEnterpriseProjectTypeListByDepartment">
      <MemberSignature Language="C#" Value="public WebSvcWorkflow.WorkflowDataSet ReadEnterpriseProjectTypeListByDepartment (Nullable&lt;Guid&gt; departmentUid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class WebSvcWorkflow.WorkflowDataSet ReadEnterpriseProjectTypeListByDepartment(valuetype System.Nullable`1&lt;valuetype System.Guid&gt; departmentUid) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.ReadEnterpriseProjectTypeListByDepartment(System.Nullable{System.Guid})" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadEnterpriseProjectTypeListByDepartment (departmentUid As Nullable(Of Guid)) As WorkflowDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebSvcWorkflow::WorkflowDataSet ^ ReadEnterpriseProjectTypeListByDepartment(Nullable&lt;Guid&gt; departmentUid);" />
      <MemberSignature Language="F#" Value="member this.ReadEnterpriseProjectTypeListByDepartment : Nullable&lt;Guid&gt; -&gt; WebSvcWorkflow.WorkflowDataSet" Usage="workflow.ReadEnterpriseProjectTypeListByDepartment departmentUid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/ReadEnterpriseProjectTypeListByDepartment", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcWorkflow.WorkflowDataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="departmentUid" Type="System.Nullable&lt;System.Guid&gt;">
          <Attributes>
            <Attribute>
              <AttributeName>System.Xml.Serialization.XmlElement(IsNullable=true)</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="departmentUid">The GUID of the department.</param>
        <summary>Allows the user to read the list of enterprise project types (EPTs) that are defined for the specified department.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Each <see cref="T:WebSvcWorkflow.WorkflowDataSet.EnterpriseProjectTypeRow" /> in <b>WorkflowDataSet.EnterpriseProjectTypeDataTable</b> contains the information for one EPT.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ChangeWorkflow" />
              </term>
              <description>Allows a user to change workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadStrategicImpactBehaviorForCurrentWorkflowStage">
      <MemberSignature Language="C#" Value="public int ReadStrategicImpactBehaviorForCurrentWorkflowStage (Guid projectUid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadStrategicImpactBehaviorForCurrentWorkflowStage(valuetype System.Guid projectUid) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.ReadStrategicImpactBehaviorForCurrentWorkflowStage(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadStrategicImpactBehaviorForCurrentWorkflowStage (projectUid As Guid) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ReadStrategicImpactBehaviorForCurrentWorkflowStage(Guid projectUid);" />
      <MemberSignature Language="F#" Value="member this.ReadStrategicImpactBehaviorForCurrentWorkflowStage : Guid -&gt; int" Usage="workflow.ReadStrategicImpactBehaviorForCurrentWorkflowStage projectUid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/ReadStrategicImpactBehaviorForCurrentWorkflowStage", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectUid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="projectUid">The GUID of the project.</param>
        <summary>Gets a value that represents the strategic effect of the current workflow stage of the specified project.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>Non-Standard</term>
              <description>The user must have the <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityCategoryPermission.OpenProject" /> category permission for the specified project.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadWorkflowPhase">
      <MemberSignature Language="C#" Value="public WebSvcWorkflow.WorkflowDataSet ReadWorkflowPhase (Guid workflowPhaseUid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class WebSvcWorkflow.WorkflowDataSet ReadWorkflowPhase(valuetype System.Guid workflowPhaseUid) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.ReadWorkflowPhase(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadWorkflowPhase (workflowPhaseUid As Guid) As WorkflowDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebSvcWorkflow::WorkflowDataSet ^ ReadWorkflowPhase(Guid workflowPhaseUid);" />
      <MemberSignature Language="F#" Value="member this.ReadWorkflowPhase : Guid -&gt; WebSvcWorkflow.WorkflowDataSet" Usage="workflow.ReadWorkflowPhase workflowPhaseUid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/ReadWorkflowPhase", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcWorkflow.WorkflowDataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowPhaseUid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowPhaseUid">The GUID of the workflow phase.</param>
        <summary>Gets information about the specified workflow phase.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The <see cref="T:WebSvcWorkflow.WorkflowDataSet.WorkflowPhaseRow" /> in the <b>WorkflowDataSet.WorkflowPhaseDataTable</b> contains the information.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadWorkflowPhaseList">
      <MemberSignature Language="C#" Value="public WebSvcWorkflow.WorkflowDataSet ReadWorkflowPhaseList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class WebSvcWorkflow.WorkflowDataSet ReadWorkflowPhaseList() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.ReadWorkflowPhaseList" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadWorkflowPhaseList () As WorkflowDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebSvcWorkflow::WorkflowDataSet ^ ReadWorkflowPhaseList();" />
      <MemberSignature Language="F#" Value="member this.ReadWorkflowPhaseList : unit -&gt; WebSvcWorkflow.WorkflowDataSet" Usage="workflow.ReadWorkflowPhaseList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/ReadWorkflowPhaseList", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcWorkflow.WorkflowDataSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads the list of workflow phases.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Each <see cref="T:WebSvcWorkflow.WorkflowDataSet.WorkflowPhaseRow" /> in the <b>WorkflowDataSet.WorkflowPhaseDataTable</b> contains the information for one workflow phase.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadWorkflowProxyUser">
      <MemberSignature Language="C#" Value="public WebSvcWorkflow.ResourceDataSet ReadWorkflowProxyUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class WebSvcWorkflow.ResourceDataSet ReadWorkflowProxyUser() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.ReadWorkflowProxyUser" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadWorkflowProxyUser () As ResourceDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebSvcWorkflow::ResourceDataSet ^ ReadWorkflowProxyUser();" />
      <MemberSignature Language="F#" Value="member this.ReadWorkflowProxyUser : unit -&gt; WebSvcWorkflow.ResourceDataSet" Usage="workflow.ReadWorkflowProxyUser " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/ReadWorkflowProxyUser", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcWorkflow.ResourceDataSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets detailed information about the proxy user for Project Server workflows.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The workflow proxy user is a Project Server account that has elevated permissions to run workflows on behalf of the user. The proxy user can call PSI methods, which are available to Project Server workflows, in the <see cref="N:Microsoft.Office.Project.Server.WebServiceProxy" /> namespace.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows a user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadWorkflows">
      <MemberSignature Language="C#" Value="public WebSvcWorkflow.WorkflowDataSet ReadWorkflows ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class WebSvcWorkflow.WorkflowDataSet ReadWorkflows() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.ReadWorkflows" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadWorkflows () As WorkflowDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebSvcWorkflow::WorkflowDataSet ^ ReadWorkflows();" />
      <MemberSignature Language="F#" Value="member this.ReadWorkflows : unit -&gt; WebSvcWorkflow.WorkflowDataSet" Usage="workflow.ReadWorkflows " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/ReadWorkflows", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcWorkflow.WorkflowDataSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets information about the workflows that are defined in Project Server.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.LogOn" />
              </term>
              <description>Allows a user to connect to Project Server from Project Professional, or to log on to Project Web App. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadWorkflowStage">
      <MemberSignature Language="C#" Value="public WebSvcWorkflow.WorkflowDataSet ReadWorkflowStage (Guid workflowStageUid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class WebSvcWorkflow.WorkflowDataSet ReadWorkflowStage(valuetype System.Guid workflowStageUid) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.ReadWorkflowStage(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadWorkflowStage (workflowStageUid As Guid) As WorkflowDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebSvcWorkflow::WorkflowDataSet ^ ReadWorkflowStage(Guid workflowStageUid);" />
      <MemberSignature Language="F#" Value="member this.ReadWorkflowStage : Guid -&gt; WebSvcWorkflow.WorkflowDataSet" Usage="workflow.ReadWorkflowStage workflowStageUid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/ReadWorkflowStage", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcWorkflow.WorkflowDataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowStageUid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="workflowStageUid">The GUID of the workflow stage.</param>
        <summary>Gets information about the specified workflow stage.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The <see cref="T:WebSvcWorkflow.WorkflowDataSet.WorkflowStageRow" /> in the <b>WorkflowDataSet.WorkflowStageDataTable</b> contains the information.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
        <example>
          <para>The example uses the <b>SvcWorkflow</b> namespace in the ProjectServerServices.dll proxy assembly. The <b>ConfigClientEndpoints</b> method uses an app.config file for setting the WCF binding, behavior, and endpoint. For information about creating a PSI proxy assembly and an app.config file, see Prerequisites for WCF-Based Code Samples.</para>
          <para>The <b>ReadWorkflowStage</b> method reads the properties of the workflow stage <b>TestStage2</b> and writes it to <b>StageInfo.xml</b>. Following is the complete xml file.</para>
          <code>&amp;lt;?xml version="1.0" standalone="yes"?&amp;gt;
&amp;lt;WorkflowDataSet xmlns="http://schemas.microsoft.com/office/project/server/webservices/WorkflowDataSet/"&amp;gt;
&amp;lt;WorkflowPhase&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;d8bc257b-c2ec-4186-8a5b-44b5b7f21d82&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Create&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_DESCRIPTION&amp;gt;&lt;/span&gt;Project information is captured in this phase&amp;lt;/PHASE_DESCRIPTION&amp;gt;
&amp;lt;/WorkflowPhase&amp;gt;
&amp;lt;WorkflowPhase&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;e4df25db-9587-4308-b504-48f985698074&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Select&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_DESCRIPTION&amp;gt;&lt;/span&gt;A subset of projects are selected in this phase&amp;lt;/PHASE_DESCRIPTION&amp;gt;
&amp;lt;/WorkflowPhase&amp;gt;
&amp;lt;WorkflowPhase&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;4c997519-d9ca-468d-a609-b0015f0d7345&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Plan&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_DESCRIPTION&amp;gt;&lt;/span&gt;For the selected projects, an execution plan will be detailed out in this workflow phase&amp;lt;/PHASE_DESCRIPTION&amp;gt;
&amp;lt;/WorkflowPhase&amp;gt;
&amp;lt;WorkflowPhase&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;d22d56e5-b4ad-4a59-b1d2-cc1fd9945e64&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Finished&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_DESCRIPTION&amp;gt;&lt;/span&gt;The workflow is finished&amp;lt;/PHASE_DESCRIPTION&amp;gt;
&amp;lt;/WorkflowPhase&amp;gt;
&amp;lt;WorkflowPhase&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;8c1b13e8-e4d6-4b62-8663-ffb1c22d7653&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Manage&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_DESCRIPTION&amp;gt;&lt;/span&gt;Projects in execution are monitored in this phase&amp;lt;/PHASE_DESCRIPTION&amp;gt;
&amp;lt;/WorkflowPhase&amp;gt;
&amp;lt;WorkflowStage&amp;gt;
&amp;lt;STAGE_UID&amp;gt;a8a158d1-a9b9-41d7-a676-d199118221c7&amp;lt;/STAGE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;STAGE_NAME&amp;gt;&lt;/span&gt;TestStage2&amp;lt;/STAGE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;d8bc257b-c2ec-4186-8a5b-44b5b7f21d82&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Create&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;STAGE_DESCRIPTION&amp;gt;&lt;/span&gt;a test stage&amp;lt;/STAGE_DESCRIPTION&amp;gt;
&lt;span class="label"&gt;&amp;lt;CHECKIN_REQUIRED&amp;gt;&lt;/span&gt;false&amp;lt;/CHECKIN_REQUIRED&amp;gt;
&amp;lt;STAGE_SUBMIT_DESCRIPTION /&amp;gt;
&lt;span class="label"&gt;&amp;lt;STATUS_PDP_UID&amp;gt;&lt;/span&gt;a7aa1c62-9577-447c-823e-bdb161f9000d&amp;lt;/STATUS_PDP_UID&amp;gt;
&amp;lt;/WorkflowStage&amp;gt;
&amp;lt;WorkflowStageStrategicImpact&amp;gt;
&lt;span class="label"&gt;&amp;lt;STAGE_UID&amp;gt;&lt;/span&gt;a8a158d1-a9b9-41d7-a676-d199118221c7&amp;lt;/STAGE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;BEHAVIOR&amp;gt;&lt;/span&gt;1&amp;lt;/BEHAVIOR&amp;gt;
&amp;lt;/WorkflowStageStrategicImpact&amp;gt;
&amp;lt;WorkflowStagePDPs&amp;gt;
&lt;span class="label"&gt;&amp;lt;STAGE_UID&amp;gt;&lt;/span&gt;a8a158d1-a9b9-41d7-a676-d199118221c7&amp;lt;/STAGE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PDP_UID&amp;gt;&lt;/span&gt;659ff164-1297-4b64-b813-489566774e27&amp;lt;/PDP_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PDP_ID&amp;gt;&lt;/span&gt;4&amp;lt;/PDP_ID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PDP_NAME&amp;gt;&lt;/span&gt;Project Information&amp;lt;/PDP_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PDP_POSITION&amp;gt;&lt;/span&gt;0&amp;lt;/PDP_POSITION&amp;gt;
&lt;span class="label"&gt;&amp;lt;PDP_REQUIRES_ATTENTION&amp;gt;&lt;/span&gt;false&amp;lt;/PDP_REQUIRES_ATTENTION&amp;gt;
&amp;lt;/WorkflowStagePDPs&amp;gt;
&amp;lt;/WorkflowDataSet&amp;gt;</code>
          <para>Following is the complete sample code.</para>
          <code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using System.ServiceModel;

namespace Microsoft.SDK.Project.Samples.WorkFlowTest
{
    class WorkFlowProject
    {
        private static SvcWorkflow.WorkflowClient workFlowClient;
        private const string WORK_ENDPOINT = "basicHttp_Workflow";
        private const string OUTPUT_FILES = @"C:\Projects\Samples\Output\";
        private static string outFilePathWorkFlowStageList;
        private static string outFilePathNewWorkFlowStage;
        private static string outFilePathStageInfo;
        private static string outFilePathUpdatedStage;

        static void Main(string[] args)
        {
            // Configure client endpoints.
            ConfigClientEndpoints(WORK_ENDPOINT);

            Guid[] workFlowID = new Guid[1];
            workFlowID[0] = new Guid("e663d9dc-f78d-4a4e-ac21-b28d22865f58");

            // If output directory does not exist, create it.
            if (!Directory.Exists(OUTPUT_FILES))
            {
                Directory.CreateDirectory(OUTPUT_FILES);
            }

            outFilePathWorkFlowStageList = OUTPUT_FILES + "WorkFlowStageList.xml";
            outFilePathNewWorkFlowStage = OUTPUT_FILES + "NewWorkflowStageInfo.xml";
            outFilePathStageInfo = OUTPUT_FILES + "StageInfo.xml";
            outFilePathUpdatedStage = OUTPUT_FILES + "UpdatedStage.xml";

            // Create the workflow dataset.
            SvcWorkflow.WorkflowDataSet workFlowDS = new SvcWorkflow.WorkflowDataSet();

            // List the workflow stages.
            workFlowDS = ListWorkflowStages(workFlowDS);

            // Create a new workflow stage.
            CreateWorkflowStageTest(workFlowDS);

            // Get workflow stage properties for a given stage.
            GetStageInfo();
        }
                
        // Read and display the properties of a stage, given the stage GUID.
        private static void GetStageInfo()
        {
            SvcWorkflow.WorkflowDataSet stageInfoDS = new SvcWorkflow.WorkflowDataSet();
            string stageName = "TestStage10";
            
            Guid stageGuid1 = new Guid("a8a158d1-a9b9-41d7-a676-d199118221c7");
            stageInfoDS = workFlowClient.ReadWorkflowStage(stageGuid1);

            Console.WriteLine("\nSee XML output of the WorkFlowDataSet at {0}",
               outFilePathStageInfo);

            // Update the stage name.
            UpdateStage(stageInfoDS, stageName, stageGuid1);

            // Get the updated stage info.
            stageInfoDS = workFlowClient.ReadWorkflowStage(stageGuid1);
            stageInfoDS.WriteXml(outFilePathStageInfo);
            Console.ReadKey();
        }
               
        // Update the stage name.
        private static void UpdateStage(SvcWorkflow.WorkflowDataSet stageInfoDS, string stageName, Guid stageGuid1)
        {
            SvcWorkflow.WorkflowDataSet.WorkflowStageRow sRow;
            sRow = stageInfoDS.WorkflowStage.FindBySTAGE_UID(stageGuid1);
            sRow.STAGE_NAME = stageName;
            Console.WriteLine("Updating the stage name........");

            workFlowClient.UpdateWorkflowStage(stageInfoDS);

            // Write the updated stage info to an xml file.
            stageInfoDS.WriteXml(outFilePathUpdatedStage);
            Console.WriteLine("Stage name updated!");
            Console.WriteLine("\nSee XML output of the Updated WorkFlowDataSet at {0}",
            outFilePathUpdatedStage);
        }

        // Create a workflow stage.
        private static void CreateWorkflowStageTest(SvcWorkflow.WorkflowDataSet workFlowDS)
        {
            // The GUID of the Create phase.
            Guid phaseGuid = new Guid("d8bc257b-c2ec-4186-8a5b-44b5b7f21d82 ");  

            Guid statusPDPId = new Guid("A7AA1C62-9577-447C-823E-BDB161F9000D");
            Guid pdp_uid = new Guid("659FF164-1297-4B64-B813-489566774E27");
            Guid stageUid = Guid.NewGuid();
                       
            // Create a workflow stage row.
            SvcWorkflow.WorkflowDataSet.WorkflowStageRow workflowstageRow = 
                workFlowDS.WorkflowStage.NewWorkflowStageRow();
            workflowstageRow.STAGE_NAME = "Test Stage 5";
            workflowstageRow.STAGE_DESCRIPTION = "Adding a test stage row";
            workflowstageRow.PHASE_NAME = "Create";
            workflowstageRow.PHASE_UID = phaseGuid;
            workflowstageRow.CHECKIN_REQUIRED = false;
            workflowstageRow.STAGE_UID = stageUid;
            workflowstageRow.STATUS_PDP_UID = statusPDPId;
            workFlowDS.WorkflowStage.AddWorkflowStageRow(workflowstageRow);

            // Add a project details page for the stage that was created previously.
            SvcWorkflow.WorkflowDataSet.WorkflowStagePDPsRow pdpRow = 
                workFlowDS.WorkflowStagePDPs.NewWorkflowStagePDPsRow();
            pdpRow.STAGE_UID = stageUid;
            pdpRow.PDP_UID = pdp_uid;
            pdpRow.PDP_NAME = "Project Information";
            pdpRow.PDP_POSITION = 0;
            pdpRow.PDP_ID = 4;
            pdpRow.PDP_REQUIRES_ATTENTION = false;
            workFlowDS.WorkflowStagePDPs.AddWorkflowStagePDPsRow(pdpRow);
        
            // Create the stage.
            workFlowClient.CreateWorkflowStage(workFlowDS);
            
            // Write the dataset with the new stage to an xml file.
            workFlowDS.WriteXml(outFilePathNewWorkFlowStage);
            Console.WriteLine("\nSee XML output of the WorkFlowDataSet at {0}",
               outFilePathNewWorkFlowStage);
        }

        // List the workflow stages in the dataset.
        private static SvcWorkflow.WorkflowDataSet ListWorkflowStages(SvcWorkflow.WorkflowDataSet workFlowDS)
        {
            workFlowDS = workFlowClient.ReadWorkflowStageList();
            workFlowDS.WriteXml(outFilePathWorkFlowStageList);

            Console.WriteLine("\nSee XML output of the WorkFlowDataSet at {0}",
               outFilePathWorkFlowStageList);
            return workFlowDS;
        }

        // Configure the custom field client endpoints.
        public static void ConfigClientEndpoints(string endpt)
        {
             workFlowClient = new SvcWorkflow.WorkflowClient(endpt);
           
        }
    }
}

</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ReadWorkflowStageList">
      <MemberSignature Language="C#" Value="public WebSvcWorkflow.WorkflowDataSet ReadWorkflowStageList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class WebSvcWorkflow.WorkflowDataSet ReadWorkflowStageList() cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.ReadWorkflowStageList" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadWorkflowStageList () As WorkflowDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebSvcWorkflow::WorkflowDataSet ^ ReadWorkflowStageList();" />
      <MemberSignature Language="F#" Value="member this.ReadWorkflowStageList : unit -&gt; WebSvcWorkflow.WorkflowDataSet" Usage="workflow.ReadWorkflowStageList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/ReadWorkflowStageList", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcWorkflow.WorkflowDataSet</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reads the list of workflow stages.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Each <see cref="T:WebSvcWorkflow.WorkflowDataSet.WorkflowStageRow" /> in the <b>WorkflowDataSet.WorkflowStageDataTable</b> contains the information for one stage.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
        <example>
          <para>The example uses the <b>SvcWorkflow</b> namespace in the ProjectServerServices.dll proxy assembly. The <b>ConfigClientEndpoints</b> method uses an app.config file for setting the WCF binding, behavior, and endpoint. For information about creating a PSI proxy assembly and an app.config file, see Prerequisites for WCF-Based Code Samples.</para>
          <para>The following example uses <b>ReadWorkflowStageList</b> to read the existing stages of a workflow. The resulting dataset, <b>workflowDS</b>, contains all the phases and stages in a workflow, and is written to the WorkflowStageList.xml file. Following is part of the WorkflowStageList.xml file.</para>
          <code>&amp;lt;?xml version="1.0" standalone="yes"?&amp;gt;
&amp;lt;WorkflowDataSet xmlns="http://schemas.microsoft.com/office/project/server/webservices/WorkflowDataSet/"&amp;gt;
&amp;lt;WorkflowPhase&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;d8bc257b-c2ec-4186-8a5b-44b5b7f21d82&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Create&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_DESCRIPTION&amp;gt;&lt;/span&gt;Project information is captured in this phase&amp;lt;/PHASE_DESCRIPTION&amp;gt;
&amp;lt;/WorkflowPhase&amp;gt; 
&amp;lt;WorkflowStage&amp;gt;
&lt;span class="label"&gt;&amp;lt;STAGE_UID&amp;gt;&lt;/span&gt;a8a158d1-a9b9-41d7-a676-d199118221c7&amp;lt;/STAGE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;STAGE_NAME&amp;gt;&lt;/span&gt;TestStage&amp;lt;/STAGE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;d8bc257b-c2ec-4186-8a5b-44b5b7f21d82&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Create&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;STAGE_DESCRIPTION&amp;gt;&lt;/span&gt;a test stage&amp;lt;/STAGE_DESCRIPTION&amp;gt;
&lt;span class="label"&gt;&amp;lt;CHECKIN_REQUIRED&amp;gt;&lt;/span&gt;false&amp;lt;/CHECKIN_REQUIRED&amp;gt;
&amp;lt;STAGE_SUBMIT_DESCRIPTION /&amp;gt;
&lt;span class="label"&gt;&amp;lt;STATUS_PDP_UID&amp;gt;&lt;/span&gt;a7aa1c62-9577-447c-823e-bdb161f9000d&amp;lt;/STATUS_PDP_UID&amp;gt;
&amp;lt;/WorkflowStage&amp;gt;</code>
          <para>Following is the complete sample code.</para>
          <code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using System.ServiceModel;

namespace Microsoft.SDK.Project.Samples.WorkFlowTest
{
    class WorkFlowProject
    {
        private static SvcWorkflow.WorkflowClient workFlowClient;
        private const string WORK_ENDPOINT = "basicHttp_Workflow";
        private const string OUTPUT_FILES = @"C:\Projects\Samples\Output\";
        private static string outFilePathWorkFlowStageList;
        private static string outFilePathNewWorkFlowStage;
        private static string outFilePathStageInfo;
        private static string outFilePathUpdatedStage;

        static void Main(string[] args)
        {
            // Configure client endpoints.
            ConfigClientEndpoints(WORK_ENDPOINT);

            Guid[] workFlowID = new Guid[1];
            workFlowID[0] = new Guid("e663d9dc-f78d-4a4e-ac21-b28d22865f58");

            // If output directory does not exist, create it.
            if (!Directory.Exists(OUTPUT_FILES))
            {
                Directory.CreateDirectory(OUTPUT_FILES);
            }

            outFilePathWorkFlowStageList = OUTPUT_FILES + "WorkFlowStageList.xml";
            outFilePathNewWorkFlowStage = OUTPUT_FILES + "NewWorkflowStageInfo.xml";
            outFilePathStageInfo = OUTPUT_FILES + "StageInfo.xml";
            outFilePathUpdatedStage = OUTPUT_FILES + "UpdatedStage.xml";

            // Create a workflow dataset.
            SvcWorkflow.WorkflowDataSet workFlowDS = new SvcWorkflow.WorkflowDataSet();

            // List the workflow stages.
            workFlowDS = ListWorkflowStages(workFlowDS);

            // Create a new workflow stage.
            CreateWorkflowStageTest(workFlowDS);

            // Get workflow stage properties for a given stage.
            GetStageInfo();
        }
                
        // Read and display the properties of a stage, given the stage GUID.
        private static void GetStageInfo()
        {
            SvcWorkflow.WorkflowDataSet stageInfoDS = new SvcWorkflow.WorkflowDataSet();
            string stageName = "TestStage10";
            
            Guid stageGuid1 = new Guid("a8a158d1-a9b9-41d7-a676-d199118221c7");
            stageInfoDS = workFlowClient.ReadWorkflowStage(stageGuid1);

            Console.WriteLine("\nSee XML output of the WorkFlowDataSet at {0}",
               outFilePathStageInfo);

            // Update the stage  name.
            UpdateStage(stageInfoDS, stageName, stageGuid1);

            // Get the updated stage info.
            stageInfoDS = workFlowClient.ReadWorkflowStage(stageGuid1);
            stageInfoDS.WriteXml(outFilePathStageInfo);
            Console.ReadKey();
        }
               
        // Update the stage name.
        private static void UpdateStage(SvcWorkflow.WorkflowDataSet stageInfoDS, string stageName, Guid stageGuid1)
        {
            SvcWorkflow.WorkflowDataSet.WorkflowStageRow sRow;
            sRow = stageInfoDS.WorkflowStage.FindBySTAGE_UID(stageGuid1);
            sRow.STAGE_NAME = stageName;
            Console.WriteLine("Updating the stage name........");

            workFlowClient.UpdateWorkflowStage(stageInfoDS);

            // Write the updated stage info to an xml file.
            stageInfoDS.WriteXml(outFilePathUpdatedStage);
            Console.WriteLine("Stage name updated!");
            Console.WriteLine("\nSee XML output of the Updated WorkFlowDataSet at {0}",
            outFilePathUpdatedStage);
        }

        // Create a workflow stage.
        private static void CreateWorkflowStageTest(SvcWorkflow.WorkflowDataSet workFlowDS)
        {
            // The GUID of the Create phase.
            Guid phaseGuid = new Guid("d8bc257b-c2ec-4186-8a5b-44b5b7f21d82 ");  

            Guid statusPDPId = new Guid("A7AA1C62-9577-447C-823E-BDB161F9000D");
            Guid pdp_uid = new Guid("659FF164-1297-4B64-B813-489566774E27");
            Guid stageUid = Guid.NewGuid();
                       
            // Create a workflow stage row.
            SvcWorkflow.WorkflowDataSet.WorkflowStageRow workflowstageRow = 
                workFlowDS.WorkflowStage.NewWorkflowStageRow();
            workflowstageRow.STAGE_NAME = "Test Stage 5";
            workflowstageRow.STAGE_DESCRIPTION = "Adding a test stage row";
            workflowstageRow.PHASE_NAME = "Create";
            workflowstageRow.PHASE_UID = phaseGuid;
            workflowstageRow.CHECKIN_REQUIRED = false;
            workflowstageRow.STAGE_UID = stageUid;
            workflowstageRow.STATUS_PDP_UID = statusPDPId;
            workFlowDS.WorkflowStage.AddWorkflowStageRow(workflowstageRow);

            // Add a project details page for the Stage created above.
            SvcWorkflow.WorkflowDataSet.WorkflowStagePDPsRow pdpRow = 
                workFlowDS.WorkflowStagePDPs.NewWorkflowStagePDPsRow();
            pdpRow.STAGE_UID = stageUid;
            pdpRow.PDP_UID = pdp_uid;
            pdpRow.PDP_NAME = "Project Information";
            pdpRow.PDP_POSITION = 0;
            pdpRow.PDP_ID = 4;
            pdpRow.PDP_REQUIRES_ATTENTION = false;
            workFlowDS.WorkflowStagePDPs.AddWorkflowStagePDPsRow(pdpRow);
        
            // Create the stage.
            workFlowClient.CreateWorkflowStage(workFlowDS);
            
            // Write the dataset with the new Stage to an xml file.
            workFlowDS.WriteXml(outFilePathNewWorkFlowStage);
            Console.WriteLine("\nSee XML output of the WorkFlowDataSet at {0}",
               outFilePathNewWorkFlowStage);
        }

        // List the workflow stages in the dataset.
        private static SvcWorkflow.WorkflowDataSet ListWorkflowStages(SvcWorkflow.WorkflowDataSet workFlowDS)
        {
            workFlowDS = workFlowClient.ReadWorkflowStageList();
            workFlowDS.WriteXml(outFilePathWorkFlowStageList);

            Console.WriteLine("\nSee XML output of the WorkFlowDataSet at {0}",
               outFilePathWorkFlowStageList);
            return workFlowDS;
        }

        // Configure the custom field client endpoints.
        public static void ConfigClientEndpoints(string endpt)
        {
             workFlowClient = new SvcWorkflow.WorkflowClient(endpt);
           
        }
    }
}

</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="ReadWorkflowStatus">
      <MemberSignature Language="C#" Value="public WebSvcWorkflow.WorkflowDataSet ReadWorkflowStatus (Guid projUid, bool readAllStagesAndPhases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class WebSvcWorkflow.WorkflowDataSet ReadWorkflowStatus(valuetype System.Guid projUid, bool readAllStagesAndPhases) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.ReadWorkflowStatus(System.Guid,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadWorkflowStatus (projUid As Guid, readAllStagesAndPhases As Boolean) As WorkflowDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebSvcWorkflow::WorkflowDataSet ^ ReadWorkflowStatus(Guid projUid, bool readAllStagesAndPhases);" />
      <MemberSignature Language="F#" Value="member this.ReadWorkflowStatus : Guid * bool -&gt; WebSvcWorkflow.WorkflowDataSet" Usage="workflow.ReadWorkflowStatus (projUid, readAllStagesAndPhases)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/ReadWorkflowStatus", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcWorkflow.WorkflowDataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projUid" Type="System.Guid" />
        <Parameter Name="readAllStagesAndPhases" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="projUid">The GUID of the project.</param>
        <param name="readAllStagesAndPhases">If <b>True</b>, read the status and additional information of the workflow stage and phase. If <b>False</b>, read only the current status and the active workflow for the project.</param>
        <summary>Reads the workflow status of the specified project.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>If <paramref name="readAllStagesAndPhases" /> = <b>True</b>, the <b>WorkflowDataSet</b> includes information about the following: workflow status, workflow instance, phase, stage, stage custom fields, project detail pages (PDPs) for the stage, and the strategic effect of the stage.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>Non-Standard</term>
              <description>The user must have the <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityCategoryPermission.OpenProject" /> category permission for the specified project.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunProjectWorkflow">
      <MemberSignature Language="C#" Value="public void RunProjectWorkflow (Guid projectUid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunProjectWorkflow(valuetype System.Guid projectUid) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.RunProjectWorkflow(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunProjectWorkflow (projectUid As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunProjectWorkflow(Guid projectUid);" />
      <MemberSignature Language="F#" Value="member this.RunProjectWorkflow : Guid -&gt; unit" Usage="workflow.RunProjectWorkflow projectUid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/RunProjectWorkflow", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectUid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="projectUid">The GUID of the project.</param>
        <summary>Runs the specified Project Server workflow instance.</summary>
        <remarks>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>Non-Standard</term>
              <description>The user must have the <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityCategoryPermission.OpenProject" /> category permission for the specified project.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorkflowStageStatusInformation">
      <MemberSignature Language="C#" Value="public void SetWorkflowStageStatusInformation (Guid projUid, Guid workflowStageUid, string statusInformation, int stageStatusValue, bool append);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetWorkflowStageStatusInformation(valuetype System.Guid projUid, valuetype System.Guid workflowStageUid, string statusInformation, int32 stageStatusValue, bool append) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.SetWorkflowStageStatusInformation(System.Guid,System.Guid,System.String,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetWorkflowStageStatusInformation (projUid As Guid, workflowStageUid As Guid, statusInformation As String, stageStatusValue As Integer, append As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetWorkflowStageStatusInformation(Guid projUid, Guid workflowStageUid, System::String ^ statusInformation, int stageStatusValue, bool append);" />
      <MemberSignature Language="F#" Value="member this.SetWorkflowStageStatusInformation : Guid * Guid * string * int * bool -&gt; unit" Usage="workflow.SetWorkflowStageStatusInformation (projUid, workflowStageUid, statusInformation, stageStatusValue, append)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/SetWorkflowStageStatusInformation", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projUid" Type="System.Guid" />
        <Parameter Name="workflowStageUid" Type="System.Guid" />
        <Parameter Name="statusInformation" Type="System.String" />
        <Parameter Name="stageStatusValue" Type="System.Int32" />
        <Parameter Name="append" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="projUid">The GUID of the project.</param>
        <param name="workflowStageUid">The GUID of the stage.</param>
        <param name="statusInformation">A <b>String</b> for a comment about the stage status.</param>
        <param name="stageStatusValue">Specifies the workflow stage status. Can be one of the constants in the <see cref="T:Microsoft.Office.Project.Server.Library.Workflow.StageStatus" /> enumeration.</param>
        <param name="append">Specifies whether to append the status information to previous data in the <see cref="P:WebSvcWorkflow.WorkflowDataSet.WorkflowStatusRow.STAGE_INFO" /> field. If <b>False</b>, deletes any previous information.</param>
        <summary>Sets the status information for a workflow stage.</summary>
        <remarks>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>Non-Standard</term>
              <description>The user must have the <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityCategoryPermission.OpenProject" /> category permission and the <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityCategoryPermission.SaveProject" /> category permission for the specified project.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateEnterpriseProjectType">
      <MemberSignature Language="C#" Value="public WebSvcWorkflow.WorkflowDataSet UpdateEnterpriseProjectType (WebSvcWorkflow.WorkflowDataSet workflowDS);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class WebSvcWorkflow.WorkflowDataSet UpdateEnterpriseProjectType(class WebSvcWorkflow.WorkflowDataSet workflowDS) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.UpdateEnterpriseProjectType(WebSvcWorkflow.WorkflowDataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateEnterpriseProjectType (workflowDS As WorkflowDataSet) As WorkflowDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebSvcWorkflow::WorkflowDataSet ^ UpdateEnterpriseProjectType(WebSvcWorkflow::WorkflowDataSet ^ workflowDS);" />
      <MemberSignature Language="F#" Value="member this.UpdateEnterpriseProjectType : WebSvcWorkflow.WorkflowDataSet -&gt; WebSvcWorkflow.WorkflowDataSet" Usage="workflow.UpdateEnterpriseProjectType workflowDS" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/UpdateEnterpriseProjectType", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcWorkflow.WorkflowDataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDS" Type="WebSvcWorkflow.WorkflowDataSet" />
      </Parameters>
      <Docs>
        <param name="workflowDS">Contains the update information for the EPT.</param>
        <summary>Updates an enterprise project type (EPT).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The <see cref="T:WebSvcWorkflow.WorkflowDataSet.EnterpriseProjectTypeRow" /> in <b>WorkflowDataSet.EnterpriseProjectTypeDataTable</b> contains the EPT information.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateProjectWorkflow">
      <MemberSignature Language="C#" Value="public void UpdateProjectWorkflow (Guid projectUid, Guid enterpriseProjectTypeUid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateProjectWorkflow(valuetype System.Guid projectUid, valuetype System.Guid enterpriseProjectTypeUid) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.UpdateProjectWorkflow(System.Guid,System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateProjectWorkflow (projectUid As Guid, enterpriseProjectTypeUid As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateProjectWorkflow(Guid projectUid, Guid enterpriseProjectTypeUid);" />
      <MemberSignature Language="F#" Value="member this.UpdateProjectWorkflow : Guid * Guid -&gt; unit" Usage="workflow.UpdateProjectWorkflow (projectUid, enterpriseProjectTypeUid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/UpdateProjectWorkflow", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectUid" Type="System.Guid" />
        <Parameter Name="enterpriseProjectTypeUid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="projectUid">The GUID of the project.</param>
        <param name="enterpriseProjectTypeUid">The GUID of the new EPT.</param>
        <summary>Changes the enterprise project type (EPT) for the specified project.</summary>
        <remarks>
          <para> The <b>UpdateProjectWorkflow</b> operation is synchronous.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ChangeWorkflow" />
              </term>
              <description>Allows a user to change workflows. Global permission.</description>
            </item>
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityCategoryPermission.OpenProject" />
              </term>
              <description>Allows a user to open a project from Project Server. Category permission.</description>
            </item>
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityCategoryPermission.SaveProject" />
              </term>
              <description>Allows a user to save a project to Project Server. Category permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateWorkflowPhase">
      <MemberSignature Language="C#" Value="public WebSvcWorkflow.WorkflowDataSet UpdateWorkflowPhase (WebSvcWorkflow.WorkflowDataSet workflowDS);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class WebSvcWorkflow.WorkflowDataSet UpdateWorkflowPhase(class WebSvcWorkflow.WorkflowDataSet workflowDS) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.UpdateWorkflowPhase(WebSvcWorkflow.WorkflowDataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateWorkflowPhase (workflowDS As WorkflowDataSet) As WorkflowDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebSvcWorkflow::WorkflowDataSet ^ UpdateWorkflowPhase(WebSvcWorkflow::WorkflowDataSet ^ workflowDS);" />
      <MemberSignature Language="F#" Value="member this.UpdateWorkflowPhase : WebSvcWorkflow.WorkflowDataSet -&gt; WebSvcWorkflow.WorkflowDataSet" Usage="workflow.UpdateWorkflowPhase workflowDS" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/UpdateWorkflowPhase", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcWorkflow.WorkflowDataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDS" Type="WebSvcWorkflow.WorkflowDataSet" />
      </Parameters>
      <Docs>
        <param name="workflowDS">Contains information for updating the workflow phase.</param>
        <summary>Updates the phase of a workflow.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The <see cref="T:WebSvcWorkflow.WorkflowDataSet.WorkflowPhaseRow" /> in the <b>WorkflowDataSet.WorkflowPhaseDataTable</b> contains the updated information.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateWorkflowProxyUser">
      <MemberSignature Language="C#" Value="public void UpdateWorkflowProxyUser (Guid resUid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateWorkflowProxyUser(valuetype System.Guid resUid) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.UpdateWorkflowProxyUser(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateWorkflowProxyUser (resUid As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateWorkflowProxyUser(Guid resUid);" />
      <MemberSignature Language="F#" Value="member this.UpdateWorkflowProxyUser : Guid -&gt; unit" Usage="workflow.UpdateWorkflowProxyUser resUid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/UpdateWorkflowProxyUser", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resUid" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="resUid">The GUID of the resource to use as the workflow proxy user.</param>
        <summary>Updates information about the proxy user for Project Server workflows.</summary>
        <remarks>
          <para>The workflow proxy user is a Project Server account that has elevated permissions to run workflows on behalf of the user. The proxy user can call PSI methods, which are available to Project Server workflows, in the <see cref="N:Microsoft.Office.Project.Server.WebServiceProxy" /> namespace.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows a user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateWorkflowStage">
      <MemberSignature Language="C#" Value="public WebSvcWorkflow.WorkflowDataSet UpdateWorkflowStage (WebSvcWorkflow.WorkflowDataSet workflowDS);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class WebSvcWorkflow.WorkflowDataSet UpdateWorkflowStage(class WebSvcWorkflow.WorkflowDataSet workflowDS) cil managed" />
      <MemberSignature Language="DocId" Value="M:WebSvcWorkflow.Workflow.UpdateWorkflowStage(WebSvcWorkflow.WorkflowDataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateWorkflowStage (workflowDS As WorkflowDataSet) As WorkflowDataSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebSvcWorkflow::WorkflowDataSet ^ UpdateWorkflowStage(WebSvcWorkflow::WorkflowDataSet ^ workflowDS);" />
      <MemberSignature Language="F#" Value="member this.UpdateWorkflowStage : WebSvcWorkflow.WorkflowDataSet -&gt; WebSvcWorkflow.WorkflowDataSet" Usage="workflow.UpdateWorkflowStage workflowDS" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>ProjectServerServices</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.Services.Protocols.SoapDocumentMethod("http://schemas.microsoft.com/office/project/server/webservices/Workflow/UpdateWorkflowStage", ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped, RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Workflow/", Use=System.Web.Services.Description.SoapBindingUse.Literal)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>WebSvcWorkflow.WorkflowDataSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workflowDS" Type="WebSvcWorkflow.WorkflowDataSet" />
      </Parameters>
      <Docs>
        <param name="workflowDS">Contains information for updating the workflow stage.</param>
        <summary>Updates the stage of a workflow.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The <see cref="T:WebSvcWorkflow.WorkflowDataSet.WorkflowStageRow" /> in the <b>WorkflowDataSet.WorkflowStageDataTable</b> contains the updated information.</para>
          <para>Project Server Permissions</para>
          <list type="table">
            <item>
              <term>
                <see cref="F:Microsoft.Office.Project.Server.Library.PSSecurityGlobalPermission.ManageWorkflow" />
              </term>
              <description>Allows the user to manage workflows. Global permission.</description>
            </item>
          </list>
          <para />
        </remarks>
        <example>
          <para>The example uses the <b>SvcWorkflow</b> namespace in the ProjectServerServices.dll proxy assembly. The <b>ConfigClientEndpoints</b> method uses an app.config file for setting the WCF binding, behavior, and endpoint. For information about creating a PSI proxy assembly and an app.config file, see Prerequisites for WCF-Based Code Samples.</para>
          <para>In this example, the stage name <b>TestStage2</b> is modified to be <b>TestStage10</b>, and the workflow is updated by calling the <b>UpdateWorkflowStage</b> method. The updated dataset, <b>stageInfoDS</b>, is written to <b>UpdatedStage.xml</b> and is shown in the following code.</para>
          <code>&amp;lt;?xml version="1.0" standalone="yes"?&amp;gt;
&amp;lt;WorkflowDataSet xmlns="http://schemas.microsoft.com/office/project/server/webservices/WorkflowDataSet/"&amp;gt;
&amp;lt;WorkflowPhase&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;d8bc257b-c2ec-4186-8a5b-44b5b7f21d82&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Create&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_DESCRIPTION&amp;gt;&lt;/span&gt;Project information is captured in this phase&amp;lt;/PHASE_DESCRIPTION&amp;gt;
&amp;lt;/WorkflowPhase&amp;gt;
&amp;lt;WorkflowPhase&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;e4df25db-9587-4308-b504-48f985698074&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Select&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_DESCRIPTION&amp;gt;&lt;/span&gt;A subset of projects are selected in this phase&amp;lt;/PHASE_DESCRIPTION&amp;gt;
&amp;lt;/WorkflowPhase&amp;gt;
&amp;lt;WorkflowPhase&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;4c997519-d9ca-468d-a609-b0015f0d7345&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Plan&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_DESCRIPTION&amp;gt;&lt;/span&gt; For the selected projects, an execution plan will be detailed out in this workflow phase&amp;lt;/PHASE_DESCRIPTION&amp;gt;
&amp;lt;/WorkflowPhase&amp;gt;
&amp;lt;WorkflowPhase&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;d22d56e5-b4ad-4a59-b1d2-cc1fd9945e64&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Finished&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_DESCRIPTION&amp;gt;&lt;/span&gt;The workflow is finished&amp;lt;/PHASE_DESCRIPTION&amp;gt;
&amp;lt;/WorkflowPhase&amp;gt;
&amp;lt;WorkflowPhase&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;8c1b13e8-e4d6-4b62-8663-ffb1c22d7653&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Manage&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_DESCRIPTION&lt;/span&gt;&amp;gt;Projects in execution are monitored in this phase&amp;lt;/PHASE_DESCRIPTION&amp;gt;
&amp;lt;/WorkflowPhase&amp;gt;
&amp;lt;WorkflowStage&amp;gt;
&lt;span class="label"&gt;&amp;lt;STAGE_UID&amp;gt;&lt;/span&gt;a8a158d1-a9b9-41d7-a676-d199118221c7&amp;lt;/STAGE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;STAGE_NAME&amp;gt;&lt;/span&gt;TestStage10&amp;lt;/STAGE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_UID&amp;gt;&lt;/span&gt;d8bc257b-c2ec-4186-8a5b-44b5b7f21d82&amp;lt;/PHASE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PHASE_NAME&amp;gt;&lt;/span&gt;Create&amp;lt;/PHASE_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;STAGE_DESCRIPTION&amp;gt;&lt;/span&gt;a test stage&amp;lt;/STAGE_DESCRIPTION&amp;gt;
&lt;span class="label"&gt;&amp;lt;CHECKIN_REQUIRED&amp;gt;&lt;/span&gt;false&amp;lt;/CHECKIN_REQUIRED&amp;gt;
&amp;lt;STAGE_SUBMIT_DESCRIPTION /&amp;gt;
&lt;span class="label"&gt;&amp;lt;STATUS_PDP_UID&amp;gt;&lt;/span&gt;a7aa1c62-9577-447c-823e-bdb161f9000d&amp;lt;/STATUS_PDP_UID&amp;gt;
&amp;lt;/WorkflowStage&amp;gt;
&amp;lt;WorkflowStageStrategicImpact&amp;gt;
&lt;span class="label"&gt;&amp;lt;STAGE_UID&amp;gt;&lt;/span&gt;a8a158d1-a9b9-41d7-a676-d199118221c7&amp;lt;/STAGE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;BEHAVIOR&amp;gt;&lt;/span&gt;1&amp;lt;/BEHAVIOR&amp;gt;
&amp;lt;/WorkflowStageStrategicImpact&amp;gt;
&amp;lt;WorkflowStagePDPs&amp;gt;
&lt;span class="label"&gt;&amp;lt;STAGE_UID&amp;gt;&lt;/span&gt;a8a158d1-a9b9-41d7-a676-d199118221c7&amp;lt;/STAGE_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PDP_UID&amp;gt;&lt;/span&gt;659ff164-1297-4b64-b813-489566774e27&amp;lt;/PDP_UID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PDP_ID&amp;gt;&lt;/span&gt;4&amp;lt;/PDP_ID&amp;gt;
&lt;span class="label"&gt;&amp;lt;PDP_NAME&amp;gt;&lt;/span&gt;Project Information&amp;lt;/PDP_NAME&amp;gt;
&lt;span class="label"&gt;&amp;lt;PDP_POSITION&amp;gt;&lt;/span&gt;0&amp;lt;/PDP_POSITION&amp;gt;
&lt;span class="label"&gt;&amp;lt;PDP_REQUIRES_ATTENTION&amp;gt;&lt;/span&gt;false&amp;lt;/PDP_REQUIRES_ATTENTION&amp;gt;
&amp;lt;/WorkflowStagePDPs&amp;gt;
&amp;lt;/WorkflowDataSet&amp;gt;</code>
          <para>Following is the complete sample code.</para>
          <code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.IO;
using System.ServiceModel;

namespace Microsoft.SDK.Project.Samples.WorkFlowTest
{
    class WorkFlowProject
    {
        private static SvcWorkflow.WorkflowClient workFlowClient;
        private const string WORK_ENDPOINT = "basicHttp_Workflow";
        private const string OUTPUT_FILES = @"C:\Projects\Samples\Output\";
        private static string outFilePathWorkFlowStageList;
        private static string outFilePathNewWorkFlowStage;
        private static string outFilePathStageInfo;
        private static string outFilePathUpdatedStage;

        static void Main(string[] args)
        {
            // Configure client endpoints.
            ConfigClientEndpoints(WORK_ENDPOINT);

            Guid[] workFlowID = new Guid[1];
            workFlowID[0] = new Guid("e663d9dc-f78d-4a4e-ac21-b28d22865f58");

            // If output directory does not exist, create it.
            if (!Directory.Exists(OUTPUT_FILES))
            {
                Directory.CreateDirectory(OUTPUT_FILES);
            }

            outFilePathWorkFlowStageList = OUTPUT_FILES + "WorkFlowStageList.xml";
            outFilePathNewWorkFlowStage = OUTPUT_FILES + "NewWorkflowStageInfo.xml";
            outFilePathStageInfo = OUTPUT_FILES + "StageInfo.xml";
            outFilePathUpdatedStage = OUTPUT_FILES + "UpdatedStage.xml";

            // Create workflow dataset.
            SvcWorkflow.WorkflowDataSet workFlowDS = new SvcWorkflow.WorkflowDataSet();

            // List the Workflow stages.
            workFlowDS = ListWorkflowStages(workFlowDS);

            // Create a new workflow stage.
            CreateWorkflowStageTest(workFlowDS);

            // Get workflow stage properties for a given stage.
            GetStageInfo();
        }
                
        // Read and display the properties of a stage, given the stage GUID.
        private static void GetStageInfo()
        {
            SvcWorkflow.WorkflowDataSet stageInfoDS = new SvcWorkflow.WorkflowDataSet();
            string stageName = "TestStage10";
            
            Guid stageGuid1 = new Guid("a8a158d1-a9b9-41d7-a676-d199118221c7");
            stageInfoDS = workFlowClient.ReadWorkflowStage(stageGuid1);

            Console.WriteLine("\nSee XML output of the WorkFlowDataSet at {0}",
               outFilePathStageInfo);

            // Update the stage name.
            UpdateStage(stageInfoDS, stageName, stageGuid1);

            // Get the updated stage info.
            stageInfoDS = workFlowClient.ReadWorkflowStage(stageGuid1);
            stageInfoDS.WriteXml(outFilePathStageInfo);
            Console.ReadKey();
        }
               
        // Update the stage name.
        private static void UpdateStage(SvcWorkflow.WorkflowDataSet stageInfoDS, string stageName, Guid stageGuid1)
        {
            SvcWorkflow.WorkflowDataSet.WorkflowStageRow sRow;
            sRow = stageInfoDS.WorkflowStage.FindBySTAGE_UID(stageGuid1);
            sRow.STAGE_NAME = stageName;
            Console.WriteLine("Updating the stage name........");

            workFlowClient.UpdateWorkflowStage(stageInfoDS);

            // Write the updated stage info to an xml file.
            stageInfoDS.WriteXml(outFilePathUpdatedStage);
            Console.WriteLine("Stage name updated!");
            Console.WriteLine("\nSee XML output of the Updated WorkFlowDataSet at {0}",
            outFilePathUpdatedStage);
        }

        // Create a workflow stage.
        private static void CreateWorkflowStageTest(SvcWorkflow.WorkflowDataSet workFlowDS)
        {
            // The GUID of the Create phase.
            Guid phaseGuid = new Guid("d8bc257b-c2ec-4186-8a5b-44b5b7f21d82 ");  

            Guid statusPDPId = new Guid("A7AA1C62-9577-447C-823E-BDB161F9000D");
            Guid pdp_uid = new Guid("659FF164-1297-4B64-B813-489566774E27");
            Guid stageUid = Guid.NewGuid();
                       
            // Create a workflow stage row.
            SvcWorkflow.WorkflowDataSet.WorkflowStageRow workflowstageRow = 
                workFlowDS.WorkflowStage.NewWorkflowStageRow();
            workflowstageRow.STAGE_NAME = "Test Stage 5";
            workflowstageRow.STAGE_DESCRIPTION = "Adding a test stage row";
            workflowstageRow.PHASE_NAME = "Create";
            workflowstageRow.PHASE_UID = phaseGuid;
            workflowstageRow.CHECKIN_REQUIRED = false;
            workflowstageRow.STAGE_UID = stageUid;
            workflowstageRow.STATUS_PDP_UID = statusPDPId;
            workFlowDS.WorkflowStage.AddWorkflowStageRow(workflowstageRow);

            // Add a project details page for the stage that was created previously.
            SvcWorkflow.WorkflowDataSet.WorkflowStagePDPsRow pdpRow = 
                workFlowDS.WorkflowStagePDPs.NewWorkflowStagePDPsRow();
            pdpRow.STAGE_UID = stageUid;
            pdpRow.PDP_UID = pdp_uid;
            pdpRow.PDP_NAME = "Project Information";
            pdpRow.PDP_POSITION = 0;
            pdpRow.PDP_ID = 4;
            pdpRow.PDP_REQUIRES_ATTENTION = false;
            workFlowDS.WorkflowStagePDPs.AddWorkflowStagePDPsRow(pdpRow);
        
            // Create the stage.
            workFlowClient.CreateWorkflowStage(workFlowDS);
            
            // Write the dataset with the new stage to an xml file.
            workFlowDS.WriteXml(outFilePathNewWorkFlowStage);
            Console.WriteLine("\nSee XML output of the WorkFlowDataSet at {0}",
               outFilePathNewWorkFlowStage);
        }

        // List the workflow stages in the dataset.
        private static SvcWorkflow.WorkflowDataSet ListWorkflowStages(SvcWorkflow.WorkflowDataSet workFlowDS)
        {
            workFlowDS = workFlowClient.ReadWorkflowStageList();
            workFlowDS.WriteXml(outFilePathWorkFlowStageList);

            Console.WriteLine("\nSee XML output of the WorkFlowDataSet at {0}",
               outFilePathWorkFlowStageList);
            return workFlowDS;
        }

        // Configure the custom field client endpoints.
        public static void ConfigClientEndpoints(string endpt)
        {
             workFlowClient = new SvcWorkflow.WorkflowClient(endpt);
           
        }
    }
}

</code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>