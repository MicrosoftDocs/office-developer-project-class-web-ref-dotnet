<Type Name="PublishedProject" FullName="Microsoft.ProjectServer.Client.PublishedProject">
  <TypeSignature Language="C#" Value="public class PublishedProject : Microsoft.ProjectServer.Client.Project" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PublishedProject extends Microsoft.ProjectServer.Client.Project" />
  <TypeSignature Language="DocId" Value="T:Microsoft.ProjectServer.Client.PublishedProject" />
  <TypeSignature Language="VB.NET" Value="Public Class PublishedProject&#xA;Inherits Project" />
  <TypeSignature Language="C++ CLI" Value="public ref class PublishedProject : Microsoft::ProjectServer::Client::Project" />
  <TypeSignature Language="F#" Value="type PublishedProject = class&#xA;    inherit Project" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.ProjectServer.Client.Project</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Microsoft.SharePoint.Client.ScriptType("PS.PublishedProject", ServerTypeId="{94083bd1-9d58-40b3-becf-c4703547d63c}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a project that is published on Project Server.</summary>
    <remarks>
      <para>To check out a project for editing, use the <see cref="P:Microsoft.ProjectServer.Client.PublishedProject.CheckOut" /> method.</para>
      <para>Project Server creates a virtual <b>PublishedProject</b> object for each draft project that has not yet been published. A virtual published project ensures that a draft project can be retrieved through the <b>ProjectCollection</b> object, whether it has been published or not. A retrieved project gets properties from the draft tables in the Project database.</para>
      <para>For example, if you create a draft project with the PSI, and then read all projects with the CSOM, the <b>ProjectCollection</b> object contains the unpublished draft project. You can determine whether a project has been published by the value of the <b>PublishedProject.LastPublishedDate</b> property, which is inherited from <see cref="P:Microsoft.ProjectServer.Client.Project.LastPublishedDate" />. For an unpublished project, the <b>LastPublishedDate</b> property value is <b>DateTime.Min</b> (1/1/0001). The following CSOM code fragment creates a draft project but does not persist or publish it.</para>
      <code>ProjectContext projContext = new ProjectContext("http://ServerName/pwa");
ProjectCreationInformation newProj = new ProjectCreationInformation();

newProj.Id = Guid.NewGuid();
newProj.Name = "Test project not published";
newProj.Start = DateTime.Today.Date;

&lt;span class="label"&gt;PublishedProject&lt;/span&gt; newPublishedProj = projContext.Projects.Add(newProj);

projContext.Load(newPublishedProj);
projContext.ExecuteQuery();

DateTime pubDate = newPublishedProj.LastPublishedDate;
Console.Write("\n\tLastPublishedDate before publishing: {0}", pubDate.ToString());</code>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PublishedProject (Microsoft.SharePoint.Client.ClientRuntimeContext context, Microsoft.SharePoint.Client.ObjectPath objectPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.SharePoint.Client.ClientRuntimeContext context, class Microsoft.SharePoint.Client.ObjectPath objectPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ProjectServer.Client.PublishedProject.#ctor(Microsoft.SharePoint.Client.ClientRuntimeContext,Microsoft.SharePoint.Client.ObjectPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PublishedProject(Microsoft::SharePoint::Client::ClientRuntimeContext ^ context, Microsoft::SharePoint::Client::ObjectPath ^ objectPath);" />
      <MemberSignature Language="F#" Value="new Microsoft.ProjectServer.Client.PublishedProject : Microsoft.SharePoint.Client.ClientRuntimeContext * Microsoft.SharePoint.Client.ObjectPath -&gt; Microsoft.ProjectServer.Client.PublishedProject" Usage="new Microsoft.ProjectServer.Client.PublishedProject (context, objectPath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.SharePoint.Client.ClientRuntimeContext" />
        <Parameter Name="objectPath" Type="Microsoft.SharePoint.Client.ObjectPath" />
      </Parameters>
      <Docs>
        <param name="context">The client run-time context for using remote objects.</param>
        <param name="objectPath">The path of the object in the client context.</param>
        <summary>Creates an instance of the <b>PublishedProject</b> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Assignments">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.PublishedAssignmentCollection Assignments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ProjectServer.Client.PublishedAssignmentCollection Assignments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.Assignments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Assignments As PublishedAssignmentCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ProjectServer::Client::PublishedAssignmentCollection ^ Assignments { Microsoft::ProjectServer::Client::PublishedAssignmentCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Assignments : Microsoft.ProjectServer.Client.PublishedAssignmentCollection" Usage="Microsoft.ProjectServer.Client.PublishedProject.Assignments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.PublishedAssignmentCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of assignments in the project.</summary>
        <value>A collection of <b>Assignment</b> objects.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateActualCosts">
      <MemberSignature Language="C#" Value="public bool CalculateActualCosts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalculateActualCosts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.CalculateActualCosts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculateActualCosts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CalculateActualCosts { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CalculateActualCosts : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.CalculateActualCosts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the project automatically calculates actual and remaining work and costs.</summary>
        <value>
          <b>True</b> if the project automatically calculates actual and remaining work and costs; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculatesActualCosts">
      <MemberSignature Language="C#" Value="public bool CalculatesActualCosts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CalculatesActualCosts" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.CalculatesActualCosts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CalculatesActualCosts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CalculatesActualCosts { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CalculatesActualCosts : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.CalculatesActualCosts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the project always calculates actual costs.</summary>
        <value>
          <b>True</b> if the project always calculates actual costs; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.Calendar Calendar { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ProjectServer.Client.Calendar Calendar" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Calendar As Calendar" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ProjectServer::Client::Calendar ^ Calendar { Microsoft::ProjectServer::Client::Calendar ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Calendar : Microsoft.ProjectServer.Client.Calendar" Usage="Microsoft.ProjectServer.Client.PublishedProject.Calendar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.Calendar</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the project calendar.</summary>
        <value>A calendar.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckOut">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.DraftProject CheckOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ProjectServer.Client.DraftProject CheckOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ProjectServer.Client.PublishedProject.CheckOut" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckOut () As DraftProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::ProjectServer::Client::DraftProject ^ CheckOut();" />
      <MemberSignature Language="F#" Value="member this.CheckOut : unit -&gt; Microsoft.ProjectServer.Client.DraftProject" Usage="publishedProject.CheckOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.DraftProject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Checks out the draft version of the project.</summary>
        <returns>The draft version of the project.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CriticalSlackLimit">
      <MemberSignature Language="C#" Value="public int CriticalSlackLimit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CriticalSlackLimit" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.CriticalSlackLimit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CriticalSlackLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CriticalSlackLimit { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CriticalSlackLimit : int" Usage="Microsoft.ProjectServer.Client.PublishedProject.CriticalSlackLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of days that a task can go past its end date before the project marks that task as critical.</summary>
        <value>The number of days.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrencyCode">
      <MemberSignature Language="C#" Value="public string CurrencyCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencyCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.CurrencyCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrencyCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencyCode { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyCode : string" Usage="Microsoft.ProjectServer.Client.PublishedProject.CurrencyCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the currency code of the project, as defined in ISO 4217.</summary>
        <value>The currency code.</value>
        <remarks>
          <para>For example, USD represents United States Dollars.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrencyDigits">
      <MemberSignature Language="C#" Value="public int CurrencyDigits { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrencyDigits" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.CurrencyDigits" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrencyDigits As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CurrencyDigits { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyDigits : int" Usage="Microsoft.ProjectServer.Client.PublishedProject.CurrencyDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of decimal digits in currency values.</summary>
        <value>The number of decimal digits.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrencyPosition">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.CurrencySymbolPosition CurrencyPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ProjectServer.Client.CurrencySymbolPosition CurrencyPosition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.CurrencyPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrencyPosition As CurrencySymbolPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ProjectServer::Client::CurrencySymbolPosition CurrencyPosition { Microsoft::ProjectServer::Client::CurrencySymbolPosition get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencyPosition : Microsoft.ProjectServer.Client.CurrencySymbolPosition" Usage="Microsoft.ProjectServer.Client.PublishedProject.CurrencyPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.CurrencySymbolPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the placement of the currency symbol in relation to the currency value.</summary>
        <value>A numerical value that represents the placement of the currency symbol.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrencySymbol">
      <MemberSignature Language="C#" Value="public string CurrencySymbol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrencySymbol" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.CurrencySymbol" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrencySymbol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrencySymbol { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrencySymbol : string" Usage="Microsoft.ProjectServer.Client.PublishedProject.CurrencySymbol" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the currency symbol that represents the type of currency that is used in the project.</summary>
        <value>A character that represents the type of currency.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentDate">
      <MemberSignature Language="C#" Value="public DateTime CurrentDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime CurrentDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.CurrentDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime CurrentDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentDate : DateTime" Usage="Microsoft.ProjectServer.Client.PublishedProject.CurrentDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current date for the project.</summary>
        <value>The current date for the project.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DaysPerMonth">
      <MemberSignature Language="C#" Value="public short DaysPerMonth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 DaysPerMonth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.DaysPerMonth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaysPerMonth As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short DaysPerMonth { short get(); };" />
      <MemberSignature Language="F#" Value="member this.DaysPerMonth : int16" Usage="Microsoft.ProjectServer.Client.PublishedProject.DaysPerMonth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default number of working days per month.</summary>
        <value>The number of working days per month.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEffortDriven">
      <MemberSignature Language="C#" Value="public bool DefaultEffortDriven { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultEffortDriven" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.DefaultEffortDriven" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultEffortDriven As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DefaultEffortDriven { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultEffortDriven : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.DefaultEffortDriven" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the scheduling of new tasks is effort-driven.</summary>
        <value>
          <b>True</b> if the scheduling of new tasks is effort-driven; otherwise, <b>False</b>.</value>
        <remarks>
          <para>Effort-driven scheduling occurs when the duration of tasks is affected by the assigning or removing of resources for the task.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultEstimatedDuration">
      <MemberSignature Language="C#" Value="public bool DefaultEstimatedDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DefaultEstimatedDuration" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.DefaultEstimatedDuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultEstimatedDuration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DefaultEstimatedDuration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultEstimatedDuration : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.DefaultEstimatedDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether new tasks have estimated durations.</summary>
        <value>
          <b>True</b> if new tasks have estimated durations; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFinishTime">
      <MemberSignature Language="C#" Value="public DateTime DefaultFinishTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DefaultFinishTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.DefaultFinishTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultFinishTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DefaultFinishTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFinishTime : DateTime" Usage="Microsoft.ProjectServer.Client.PublishedProject.DefaultFinishTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default end time of a working day.</summary>
        <value>The default end time.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultFixedCostAccrual">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.FixedCostAccrual DefaultFixedCostAccrual { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ProjectServer.Client.FixedCostAccrual DefaultFixedCostAccrual" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.DefaultFixedCostAccrual" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultFixedCostAccrual As FixedCostAccrual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ProjectServer::Client::FixedCostAccrual DefaultFixedCostAccrual { Microsoft::ProjectServer::Client::FixedCostAccrual get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultFixedCostAccrual : Microsoft.ProjectServer.Client.FixedCostAccrual" Usage="Microsoft.ProjectServer.Client.PublishedProject.DefaultFixedCostAccrual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.FixedCostAccrual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates which default fixed-cost accrual method to use on new tasks.</summary>
        <value>A numerical value that represents the default fixed-cost accrual method to use.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOvertimeRate">
      <MemberSignature Language="C#" Value="public double DefaultOvertimeRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DefaultOvertimeRate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.DefaultOvertimeRate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultOvertimeRate As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DefaultOvertimeRate { double get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOvertimeRate : double" Usage="Microsoft.ProjectServer.Client.PublishedProject.DefaultOvertimeRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default overtime rate for local resources.</summary>
        <value>The default overtime rate.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultStandardRate">
      <MemberSignature Language="C#" Value="public double DefaultStandardRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 DefaultStandardRate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.DefaultStandardRate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultStandardRate As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double DefaultStandardRate { double get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultStandardRate : double" Usage="Microsoft.ProjectServer.Client.PublishedProject.DefaultStandardRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default standard rate for local resources.</summary>
        <value>The default standard rate.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultStartTime">
      <MemberSignature Language="C#" Value="public DateTime DefaultStartTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DefaultStartTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.DefaultStartTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultStartTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DefaultStartTime { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultStartTime : DateTime" Usage="Microsoft.ProjectServer.Client.PublishedProject.DefaultStartTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default start time of a working day.</summary>
        <value>The default start time of a working day.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultTaskType">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.TaskType DefaultTaskType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ProjectServer.Client.TaskType DefaultTaskType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.DefaultTaskType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultTaskType As TaskType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ProjectServer::Client::TaskType DefaultTaskType { Microsoft::ProjectServer::Client::TaskType get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultTaskType : Microsoft.ProjectServer.Client.TaskType" Usage="Microsoft.ProjectServer.Client.PublishedProject.DefaultTaskType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.TaskType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default type for tasks in the project.</summary>
        <value>A numerical value that indicates the default task type.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultWorkFormat">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.WorkFormat DefaultWorkFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ProjectServer.Client.WorkFormat DefaultWorkFormat" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.DefaultWorkFormat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DefaultWorkFormat As WorkFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ProjectServer::Client::WorkFormat DefaultWorkFormat { Microsoft::ProjectServer::Client::WorkFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultWorkFormat : Microsoft.ProjectServer.Client.WorkFormat" Usage="Microsoft.ProjectServer.Client.PublishedProject.DefaultWorkFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.WorkFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default format for work duration.</summary>
        <value>The default work format.</value>
        <remarks>
          <para>An example of a format for work duration is the use of hours and minutes.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.QueueJob DeleteObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ProjectServer.Client.QueueJob DeleteObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ProjectServer.Client.PublishedProject.DeleteObject" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteObject () As QueueJob" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::ProjectServer::Client::QueueJob ^ DeleteObject();" />
      <MemberSignature Language="F#" Value="member this.DeleteObject : unit -&gt; Microsoft.ProjectServer.Client.QueueJob" Usage="publishedProject.DeleteObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.QueueJob</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deletes the <b>PublishedProject</b> object.</summary>
        <returns>A <b>QueueJob</b> object that contains information about the queued job.</returns>
        <remarks>
          <para>If the queue job is successful, the Project Server Queuing Service deletes the published version of the project. The draft version is also deleted.</para>
          <para />
        </remarks>
        <example>
          <para>The following example deletes a specified project from both the published store and the draft store. The Project 2013 SDK download includes the complete Visual Studio 2012 solution in the ~\Samples\DeleteOneProjectCSOM folder.</para>
          <code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.ProjectServer.Client;

namespace DeleteOneProject
{
    class Program
    {
        // Change the path for your Project Web App instance.
        private const string pwaPath = "http://servername/pwa/";
        private static string projName = string.Empty;
        private static int timeoutSeconds = 10;  // The default queue job wait time queue job, in seconds.

        private static ProjectContext projContext;

        static void Main(string[] args)
        {
            if (!ParseCommandLine(args))
            {
                Usage();
                ExitApp(false);
            }

            projContext = new ProjectContext(pwaPath);

            bool projDeleted = DeleteTheProject(projName);

            ExitApp(projDeleted);
        }

        // Delete the specified project from the collection of projects.
        private static bool DeleteTheProject(string projectName)
        {
            bool isProjectDeleted = false;

            Console.Write("Deleting the project: '{0}'", projName);

            var projCollection = projContext.LoadQuery(
                projContext.Projects
                    .Where(p =&amp;gt; p.Name == projName));

            projContext.ExecuteQuery();

            int numProjectsInCollection = projCollection.Count();

            if (numProjectsInCollection &amp;gt; 0)
            {
                projCollection.First().DeleteObject();

                // Update the collection of published projects.
                QueueJob qJob = projContext.Projects.Update();
                isProjectDeleted = SubmitQueueJob(qJob);
            }
            else
            {
                Console.ForegroundColor = ConsoleColor.Yellow;
                Console.WriteLine("\nNo project named '{0}' exists.", projName);
            }

            if (isProjectDeleted)
            {
                Console.ForegroundColor = ConsoleColor.Cyan;
                Console.WriteLine("\nThe '{0}' project was deleted.", projName);
                Console.ResetColor();
            }
            else
            {
                Console.ForegroundColor = ConsoleColor.Yellow;
                Console.WriteLine("\nThere was a problem deleting the project: '{0}'.", projName);
                Console.ResetColor();
            }
            return isProjectDeleted;
        }

        // Call WaitForQueue, for the specified maximum time. If the job state is not successful,
        // write an error message.
        private static bool SubmitQueueJob(QueueJob qJob)
        {
            bool jobSuccess = false;
            // Calling Load and ExecuteQuery for the queue job is optional. If qJob is 
            // not initialized when you call WaitForQueue, Project Server initializes it.
            //projContext.Load(qJob);
            //projContext.ExecuteQuery();

            JobState jobState = projContext.WaitForQueue(qJob, timeoutSeconds);          

            try
            {
                if (jobState == JobState.Success)
                {
                    jobSuccess = true;
                }
                else
                {
                    Console.ForegroundColor = ConsoleColor.Yellow;
                    Console.WriteLine("\nThere is a problem in the queue. Timeout is {0} seconds.",
                        timeoutSeconds);
                    Console.WriteLine("\tQueue JobState: {0}", jobState.ToString());
                    Console.ResetColor();
                }              
            }

            catch (Exception ex)
            {
                Console.ForegroundColor = ConsoleColor.Red;
                Console.WriteLine("\nError: {0}", ex.Message);
                Console.ResetColor();
            }
                return jobSuccess;
        }

        // Parse the command line. Return true if there are no errors.
        private static bool ParseCommandLine(string[] args)
        {
            bool error = false;
            int argsLen = args.Length;

            try
            {
                for (int i = 0; i &amp;lt; argsLen; i++)
                {
                    if (error) break;
                    if (args[i].StartsWith("-") || args[i].StartsWith("/"))
                        args[i] = "*" + args[i].Substring(1).ToLower();

                    switch (args[i])
                    {
                        case "*projname":
                        case "*p":
                            if (++i &amp;gt;= argsLen) return false;
                            projName = args[i];
                            break;                     
                        case "*timeout":
                        case "*t":
                            if (++i &amp;gt;= argsLen) return false;
                            timeoutSeconds = Convert.ToInt32(args[i]);
                            break;
                        case "*?":
                        default:
                            error = true;
                            break;
                    }
                }
            }
            catch (FormatException)
            {
                error = true;
            }

            if (string.IsNullOrEmpty(projName)) error = true;
            return !error;
        }

        private static void Usage()
        {
            string example = "Usage: -projName | -n \"Project name\" [-timeout | -t sec]";
            example += "\nExample: -n \"My New Project\"";
            Console.WriteLine(example);
        }

        private static void ExitApp(bool projDeleted)
        {
            Console.Write("\n{0}Press any key to exit... ", projDeleted ? "Success! " : "");
            Console.ReadKey(true);
            Environment.Exit(0);
        }
    }
}</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="Microsoft.ProjectServer.Client.PublishedProject.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the project description.</summary>
        <value>The project description.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Draft">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.DraftProject Draft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ProjectServer.Client.DraftProject Draft" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.Draft" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Draft As DraftProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ProjectServer::Client::DraftProject ^ Draft { Microsoft::ProjectServer::Client::DraftProject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Draft : Microsoft.ProjectServer.Client.DraftProject" Usage="Microsoft.ProjectServer.Client.PublishedProject.Draft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.DraftProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <see cref="T:Microsoft.ProjectServer.Client.DraftProject" /> object if it is not already checked out.</summary>
        <value>A <b>DraftProject</b> object.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,object&gt; FieldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; FieldValues" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.FieldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FieldValues As Dictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ FieldValues { System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldValues : System.Collections.Generic.Dictionary&lt;string, obj&gt;" Usage="Microsoft.ProjectServer.Client.PublishedProject.FieldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the custom field values for the published project.</summary>
        <value>A set of key-value pairs for custom field values, where the key is the internal custom field name, and the value is either the custom field value or the internal name of a lookup table entry.</value>
        <remarks>To be added.</remarks>
        <example>
          <para>The following code example queries each published enterprise project for its collection of custom fields. It lists the GUID and name of the project, the name and value of each custom field, and the internal name of each custom field in the project as the key in a key-value pair. If the custom field uses a lookup table, the <b>FieldValues</b> item contains the internal name of the lookup table entry. If the custom field is a multivalue text field, the example lists the value and internal name of each lookup table entry for that custom field in the project. If the custom field does not use a lookup table, the value is simply the custom field value.</para>
          <para>The internal name of a custom field is a string with the value "Custom_[GUID]", for example, Custom_9d77d62aa92e4d40adc8446c90eb7456. The internal name of a lookup table entry is a string with the value "Entry_[GUID]", for example, Entry_4a2750309d91e21193f90021704e28a0.</para>
          <code>using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using Microsoft.ProjectServer.Client;

namespace GetProjectFieldValues
{
    class Program
    {
        private const string pwaPath = "http://ServerName/pwa";    // Change the path for Project Web App.

        // Set the Project Server client context.
        private static ProjectContext projContext;

        static void Main(string[] args)
        {
            projContext = new ProjectContext(pwaPath);

            // Get the list of published projects in Project Web App.
            projContext.Load(projContext.Projects);
            projContext.ExecuteQuery();

            Console.WriteLine("\t\tProject ID\t     :\tProject name");

            if (projContext.Projects.Count &amp;gt; 0)
            {
                for (int i = 0; i &amp;lt; projContext.Projects.Count; i++)
                {
                    var pubProj = projContext.Projects[i].IncludeCustomFields;
                    projContext.Load(pubProj);
                    projContext.Load(pubProj.CustomFields);
                    projContext.ExecuteQuery();

                    Console.WriteLine("\n{0} :\t{1}", pubProj.Id.ToString(), pubProj.Name);
                    int numCFs = pubProj.CustomFields.Count;
                    Console.WriteLine("Number of custom fields: {0}", numCFs.ToString());

                    Dictionary&amp;lt;string, object&amp;gt; projDict = pubProj.FieldValues;

                    // Variables to compare with custom field types:
                    string textValue = "";                  // TEXT - no lookup table
                    String[] lutTextValues = { "" };        // TEXT - lookup table
                    DateTime dateValue = DateTime.MinValue; // DATE - no lookup table

                    foreach (KeyValuePair&amp;lt;string, object&amp;gt; kvp in projDict)
                    {
                        object oVal = kvp.Value;
                        string keyStr = kvp.Key;

                        var projCFs = projContext.LoadQuery(pubProj.CustomFields
                            .Where(cf =&amp;gt; cf.InternalName == keyStr));
                        projContext.ExecuteQuery();

                        Console.WriteLine("\n    Custom field: '{0}'; FieldType = {1};\n\tInternalName = {2}",
                            projCFs.First().Name, projCFs.First().FieldType.ToString(), keyStr);

                        // Check whether the custom field is a simple text field.
                        if (object.ReferenceEquals(oVal.GetType(), textValue.GetType()))
                        {
                            textValue = (string)oVal;
                            Console.WriteLine("\tSingle-line string value = {0}", textValue.ToString());
                        }
                        // Check whether the custom field is a text (or multivalue text) field from a lookup table.
                        else if (object.ReferenceEquals(oVal.GetType(), lutTextValues.GetType()))
                        {
                            projContext.Load(projCFs.First().LookupTable);
                            projContext.ExecuteQuery();
                            string lutName = projCFs.First().LookupTable.Name;

                            Console.WriteLine("\tLookup table: {0}", lutName);

                            var luts = projContext.LoadQuery(projContext.LookupTables
                                .Where(lut =&amp;gt; lut.Name == lutName));
                            projContext.ExecuteQuery();

                            lutTextValues = (string[])oVal;

                            for (var j = 0; j &amp;lt; lutTextValues.Count(); j++)
                            {
                                var entries = projContext.LoadQuery(luts.First().Entries
                                    .Where(e =&amp;gt; e.InternalName == lutTextValues[j]));
                                projContext.ExecuteQuery();
                                Console.WriteLine("\t    Entry({0}): String value = {1};\n\t\t  InternalName = {2}",
                                    j, entries.First().FullValue, lutTextValues[j]);
                            }
                        }
                        // Check whether the custom field is a date.
                        else if (object.ReferenceEquals(oVal.GetType(), dateValue.GetType()))
                        {
                            dateValue = (DateTime)oVal;

                            Console.WriteLine("\tDate value = {0}", dateValue.ToString());
                        }
                        // Add other cases for cost, duration, flag, and number custom fields,
                        // with and without lookup tables.
                    }
                }
            }
            Console.Write("\nPress any key to exit: ");
            Console.ReadKey(false);
        }
    }
}</code>
          <para>For example, a project named TestProject9 has a Project Departments custom field value, a multivalue text custom field with three lookup table entry values, a simple text custom field, and a date custom field. Because Project Departments is a built-in custom field, the GUID for the Project Departments custom field in default Project Web App instances is 9d77d62a-a92e-4d40-adc8-446c90eb7456. Following is the output of the <b>GetProjectFieldValues</b> sample app:</para>
          <code>b846e947-29e0-43eb-b5c6-5ddeaf08d5c0 :  TestProject9
Number of custom fields: 4

    Custom field: 'Project Departments'; FieldType = TEXT;
        InternalName = Custom_9d77d62aa92e4d40adc8446c90eb7456
        Lookup table: Department
            Entry(0): String value = Test Dept 1;
                  InternalName = Entry_bbc07ff5b06de21193f40021704e28a0

    Custom field: 'ProjectMVText'; FieldType = TEXT;
        InternalName = Custom_9295a8759d91e21193f90021704e28a0
        Lookup table: TestTextMV
            Entry(0): String value = First.001;
                  InternalName = Entry_4a2750309d91e21193f90021704e28a0
            Entry(1): String value = Second.002;
                  InternalName = Entry_4d2750309d91e21193f90021704e28a0
            Entry(2): String value = Third;
                  InternalName = Entry_4f2750309d91e21193f90021704e28a0

    Custom field: 'Test Project Date'; FieldType = DATE;
        InternalName = Custom_37f61601a991e21193f90021704e28a0
        Date value = 3/29/2013 8:00:00 AM

    Custom field: 'Test project simple text'; FieldType = TEXT;
        InternalName = Custom_8bf7eed5cc94e21193f90021704e28a0
        Single-line string value = This is a line of text</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="FinishDate">
      <MemberSignature Language="C#" Value="public DateTime FinishDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime FinishDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.FinishDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FinishDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime FinishDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.FinishDate : DateTime" Usage="Microsoft.ProjectServer.Client.PublishedProject.FinishDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the project finish date.</summary>
        <value>The project finish date.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FiscalYearStartMonth">
      <MemberSignature Language="C#" Value="public short FiscalYearStartMonth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 FiscalYearStartMonth" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.FiscalYearStartMonth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FiscalYearStartMonth As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short FiscalYearStartMonth { short get(); };" />
      <MemberSignature Language="F#" Value="member this.FiscalYearStartMonth : int16" Usage="Microsoft.ProjectServer.Client.PublishedProject.FiscalYearStartMonth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of the first month in the fiscal year.</summary>
        <value>A numerical value that represents the first month in the fiscal year.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HonorConstraints">
      <MemberSignature Language="C#" Value="public bool HonorConstraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HonorConstraints" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.HonorConstraints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HonorConstraints As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HonorConstraints { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HonorConstraints : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.HonorConstraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether scheduling constraints take precedence over dependencies.</summary>
        <value>
          <b>True</b> if scheduling constraints take precedence over dependencies; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeCustomFields">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.PublishedProject IncludeCustomFields { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ProjectServer.Client.PublishedProject IncludeCustomFields" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.IncludeCustomFields" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeCustomFields As PublishedProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ProjectServer::Client::PublishedProject ^ IncludeCustomFields { Microsoft::ProjectServer::Client::PublishedProject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncludeCustomFields : Microsoft.ProjectServer.Client.PublishedProject" Usage="Microsoft.ProjectServer.Client.PublishedProject.IncludeCustomFields" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.PublishedProject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <b>PublishedProject</b> object that includes custom fields.</summary>
        <value>A published project.</value>
        <remarks>
          <para>For projects with many custom fields, performance can be slow when retrieving and saving the project. When you use the <see cref="M:Microsoft.ProjectServer.Client.PublishedProject.CheckOut" /> method to check out a project, by default, the <b>DraftProject</b> object does not include custom fields. By using the <b>IncludeCustomFields</b> property, the project that is checked out includes custom field information.</para>
          <para />
        </remarks>
        <example>
          <para>The following <b>CheckoutProject</b> method checks out a project that includes custom fields.</para>
          <code>private static DraftProject &lt;span class="label"&gt;CheckoutProject&lt;/span&gt;(ProjectContext projContext, string projName)
{
    DraftProject projCheckedOut = null;

    var projCollection = projContext.LoadQuery(
        projContext.Projects
            .Where(p =&amp;gt; p.Name == projName));

    projContext.ExecuteQuery();

    if (projCollection.Count() &amp;gt; 0)
    {
        PublishedProject proj2Edit = projCollection.First().IncludeCustomFields;

        projCheckedOut = proj2Edit.CheckOut().&lt;span class="label"&gt;IncludeCustomFields&lt;/span&gt;;
    }
    return projCheckedOut;
}</code>
          <para>For another code example, see <see cref="P:Microsoft.ProjectServer.Client.PublishedProject.IncludeCustomFields" />.</para>
        </example>
      </Docs>
    </Member>
    <Member MemberName="InitNonPropertyFieldFromJson">
      <MemberSignature Language="C#" Value="protected override void InitNonPropertyFieldFromJson (string peekedName, Microsoft.SharePoint.Client.JsonReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitNonPropertyFieldFromJson(string peekedName, class Microsoft.SharePoint.Client.JsonReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ProjectServer.Client.PublishedProject.InitNonPropertyFieldFromJson(System.String,Microsoft.SharePoint.Client.JsonReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitNonPropertyFieldFromJson (peekedName As String, reader As JsonReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitNonPropertyFieldFromJson(System::String ^ peekedName, Microsoft::SharePoint::Client::JsonReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.InitNonPropertyFieldFromJson : string * Microsoft.SharePoint.Client.JsonReader -&gt; unit" Usage="publishedProject.InitNonPropertyFieldFromJson (peekedName, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peekedName" Type="System.String" />
        <Parameter Name="reader" Type="Microsoft.SharePoint.Client.JsonReader" />
      </Parameters>
      <Docs>
        <param name="peekedName">The name of the property to initialize.</param>
        <param name="reader">The <b>JsonReader</b> object that initializes the property value from the JSON data.</param>
        <summary>Reserved for internal use.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitOnePropertyFromJson">
      <MemberSignature Language="C#" Value="protected override bool InitOnePropertyFromJson (string peekedName, Microsoft.SharePoint.Client.JsonReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool InitOnePropertyFromJson(string peekedName, class Microsoft.SharePoint.Client.JsonReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ProjectServer.Client.PublishedProject.InitOnePropertyFromJson(System.String,Microsoft.SharePoint.Client.JsonReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function InitOnePropertyFromJson (peekedName As String, reader As JsonReader) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool InitOnePropertyFromJson(System::String ^ peekedName, Microsoft::SharePoint::Client::JsonReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.InitOnePropertyFromJson : string * Microsoft.SharePoint.Client.JsonReader -&gt; bool" Usage="publishedProject.InitOnePropertyFromJson (peekedName, reader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peekedName" Type="System.String" />
        <Parameter Name="reader" Type="Microsoft.SharePoint.Client.JsonReader" />
      </Parameters>
      <Docs>
        <param name="peekedName">The name of the property to initialize.</param>
        <param name="reader">The <b>JsonReader</b> object that initializes the property value from the JSON data.</param>
        <summary>Reserved for internal use.</summary>
        <returns>
          <b>True</b> if the property is initialized; otherwise, <b>False</b>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnterpriseProject">
      <MemberSignature Language="C#" Value="public bool IsEnterpriseProject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnterpriseProject" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.IsEnterpriseProject" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnterpriseProject As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnterpriseProject { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnterpriseProject : bool with get, set" Usage="Microsoft.ProjectServer.Client.PublishedProject.IsEnterpriseProject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the published project is an enterprise project (managed by Project Server).</summary>
        <value>
          <b>True</b> if the published project is an enterprise project; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string fieldName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(fieldName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ fieldName); void set(System::String ^ fieldName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="Microsoft.ProjectServer.Client.PublishedProject.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Microsoft.SharePoint.Client.PseudoRemote(Name="GetFieldValue")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Microsoft.SharePoint.Client.Remote(Name="SetCustomFieldValue")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fieldName">The name of a project item.</param>
        <summary>Gets or sets an item in the project.</summary>
        <value>A <b>PublishedProject</b> item.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadExpandoFields">
      <MemberSignature Language="C#" Value="protected override void LoadExpandoFields ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadExpandoFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ProjectServer.Client.PublishedProject.LoadExpandoFields" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadExpandoFields ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadExpandoFields();" />
      <MemberSignature Language="F#" Value="override this.LoadExpandoFields : unit -&gt; unit" Usage="publishedProject.LoadExpandoFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reserved for internal use. Initializes the extended properties that are associated with the <b>PublishedProject</b> object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinutesPerDay">
      <MemberSignature Language="C#" Value="public int MinutesPerDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinutesPerDay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.MinutesPerDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinutesPerDay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinutesPerDay { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinutesPerDay : int" Usage="Microsoft.ProjectServer.Client.PublishedProject.MinutesPerDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default number of minutes per day.</summary>
        <value>A numerical value that represents the default number of minutes per day.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinutesPerWeek">
      <MemberSignature Language="C#" Value="public int MinutesPerWeek { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinutesPerWeek" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.MinutesPerWeek" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinutesPerWeek As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MinutesPerWeek { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinutesPerWeek : int" Usage="Microsoft.ProjectServer.Client.PublishedProject.MinutesPerWeek" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default number of minutes per week.</summary>
        <value>A numerical value that represent the default number of minutes per week.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveActualIfLater">
      <MemberSignature Language="C#" Value="public bool MoveActualIfLater { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveActualIfLater" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.MoveActualIfLater" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MoveActualIfLater As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveActualIfLater { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveActualIfLater : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.MoveActualIfLater" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether to move the end date of completed parts forward to the status date, if the actual end date falls before the status date.</summary>
        <value>
          <b>True</b> if the end date of completed parts should be moved forward to the status date; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveActualToStatus">
      <MemberSignature Language="C#" Value="public bool MoveActualToStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveActualToStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.MoveActualToStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MoveActualToStatus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveActualToStatus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveActualToStatus : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.MoveActualToStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether to move the end date of completed parts back to the status date, if the actual end data falls after the status date.</summary>
        <value>
          <b>True</b> if the end date of completed parts should be moved back to the status date; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveRemainingIfEarlier">
      <MemberSignature Language="C#" Value="public bool MoveRemainingIfEarlier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveRemainingIfEarlier" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.MoveRemainingIfEarlier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MoveRemainingIfEarlier As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveRemainingIfEarlier { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRemainingIfEarlier : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.MoveRemainingIfEarlier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether to move the start date of remaining parts forward to the status date, if the actual start date falls before the status date.</summary>
        <value>
          <b>True</b> if the start date of remaining parts should be moved forward to the status date; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveRemainingToStatus">
      <MemberSignature Language="C#" Value="public bool MoveRemainingToStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MoveRemainingToStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.MoveRemainingToStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MoveRemainingToStatus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MoveRemainingToStatus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRemainingToStatus : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.MoveRemainingToStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether to move the start date of the remaining parts back to the status date, if the actual start date falls after the status date.</summary>
        <value>
          <b>True</b> if the start date of the remaining parts should be moved back to the status date; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MultipleCriticalPaths">
      <MemberSignature Language="C#" Value="public bool MultipleCriticalPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MultipleCriticalPaths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.MultipleCriticalPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MultipleCriticalPaths As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MultipleCriticalPaths { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.MultipleCriticalPaths : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.MultipleCriticalPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether to calculate multiple critical paths.</summary>
        <value>
          <b>True</b> if multiple critical paths should be calculated; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.ProjectServer.Client.PublishedProject.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the project.</summary>
        <value>The project name.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewTasksAreManual">
      <MemberSignature Language="C#" Value="public bool NewTasksAreManual { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NewTasksAreManual" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.NewTasksAreManual" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewTasksAreManual As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NewTasksAreManual { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NewTasksAreManual : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.NewTasksAreManual" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether new tasks are manually scheduled.</summary>
        <value>
          <b>True</b> if new tasks are manually scheduled; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberFiscalYearFromStart">
      <MemberSignature Language="C#" Value="public bool NumberFiscalYearFromStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NumberFiscalYearFromStart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.NumberFiscalYearFromStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NumberFiscalYearFromStart As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NumberFiscalYearFromStart { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.NumberFiscalYearFromStart : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.NumberFiscalYearFromStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether to use the project start year for fiscal year numbering.</summary>
        <value>
          <b>True</b> if the project start year should be used for fiscal year numbering; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public Microsoft.SharePoint.Client.User Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.SharePoint.Client.User Owner" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As User" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SharePoint::Client::User ^ Owner { Microsoft::SharePoint::Client::User ^ get(); void set(Microsoft::SharePoint::Client::User ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : Microsoft.SharePoint.Client.User with get, set" Usage="Microsoft.ProjectServer.Client.PublishedProject.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.SharePoint.Client.User</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the owner of the project.</summary>
        <value>The project owner.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectResources">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.PublishedProjectResourceCollection ProjectResources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ProjectServer.Client.PublishedProjectResourceCollection ProjectResources" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.ProjectResources" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectResources As PublishedProjectResourceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ProjectServer::Client::PublishedProjectResourceCollection ^ ProjectResources { Microsoft::ProjectServer::Client::PublishedProjectResourceCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectResources : Microsoft.ProjectServer.Client.PublishedProjectResourceCollection" Usage="Microsoft.ProjectServer.Client.PublishedProject.ProjectResources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.PublishedProjectResourceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of resources for a project.</summary>
        <value>A collection of <b>PublishedProjectResource</b> objects.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedActualsSynch">
      <MemberSignature Language="C#" Value="public bool ProtectedActualsSynch { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ProtectedActualsSynch" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.ProtectedActualsSynch" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedActualsSynch As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ProtectedActualsSynch { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtectedActualsSynch : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.ProtectedActualsSynch" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the project actuals are synchronized with the protected actuals.</summary>
        <value>
          <b>True</b> if the project actuals are synchronized with the protected actuals; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshLoad">
      <MemberSignature Language="C#" Value="public override void RefreshLoad ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RefreshLoad() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ProjectServer.Client.PublishedProject.RefreshLoad" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RefreshLoad ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RefreshLoad();" />
      <MemberSignature Language="F#" Value="override this.RefreshLoad : unit -&gt; unit" Usage="publishedProject.RefreshLoad " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reserved for internal use. Reloads all scalar properties that are associated with the <b>PublishedProject</b> object.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScheduledFromStart">
      <MemberSignature Language="C#" Value="public bool ScheduledFromStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ScheduledFromStart" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.ScheduledFromStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ScheduledFromStart As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ScheduledFromStart { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ScheduledFromStart : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.ScheduledFromStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the project is scheduled from the finish date instead of the start date.</summary>
        <value>
          <b>True</b> if the project is scheduled from the finish date instead of the start date; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowEstimatedDurations">
      <MemberSignature Language="C#" Value="public bool ShowEstimatedDurations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowEstimatedDurations" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.ShowEstimatedDurations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ShowEstimatedDurations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowEstimatedDurations { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ShowEstimatedDurations : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.ShowEstimatedDurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether a question mark is displayed after an estimated duration for a task.</summary>
        <value>
          <b>True</b> if a question mark is displayed after an estimated duration for a task; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitInProgress">
      <MemberSignature Language="C#" Value="public bool SplitInProgress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SplitInProgress" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.SplitInProgress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SplitInProgress As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SplitInProgress { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SplitInProgress : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.SplitInProgress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether to split tasks that are in progress.</summary>
        <value>
          <b>True</b> if tasks that are in progress are to be split; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpreadActualCostsToStatus">
      <MemberSignature Language="C#" Value="public bool SpreadActualCostsToStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpreadActualCostsToStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.SpreadActualCostsToStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpreadActualCostsToStatus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SpreadActualCostsToStatus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SpreadActualCostsToStatus : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.SpreadActualCostsToStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether actual costs are spread to the status date or to the stop date.</summary>
        <value>
          <b>True</b> if actual costs are spread to the status date; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SpreadPercentCompleteToStatus">
      <MemberSignature Language="C#" Value="public bool SpreadPercentCompleteToStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpreadPercentCompleteToStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.SpreadPercentCompleteToStatus" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpreadPercentCompleteToStatus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SpreadPercentCompleteToStatus { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SpreadPercentCompleteToStatus : bool" Usage="Microsoft.ProjectServer.Client.PublishedProject.SpreadPercentCompleteToStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether the percentage complete consideration period is spread to the status date or to the task finish date.</summary>
        <value>
          <b>True</b> if the percentage complete consideration period is spread to the status date; otherwise, <b>False</b>.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartDate">
      <MemberSignature Language="C#" Value="public DateTime StartDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime StartDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.StartDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime StartDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.StartDate : DateTime" Usage="Microsoft.ProjectServer.Client.PublishedProject.StartDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the project start date.</summary>
        <value>The project start date.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusDate">
      <MemberSignature Language="C#" Value="public DateTime StatusDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime StatusDate" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.StatusDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StatusDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime StatusDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.StatusDate : DateTime" Usage="Microsoft.ProjectServer.Client.PublishedProject.StatusDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the status date for the project.</summary>
        <value>The status date for the project.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubmitToWorkflow">
      <MemberSignature Language="C#" Value="public void SubmitToWorkflow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SubmitToWorkflow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ProjectServer.Client.PublishedProject.SubmitToWorkflow" />
      <MemberSignature Language="VB.NET" Value="Public Sub SubmitToWorkflow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SubmitToWorkflow();" />
      <MemberSignature Language="F#" Value="member this.SubmitToWorkflow : unit -&gt; unit" Usage="publishedProject.SubmitToWorkflow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Causes the workflow to run.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskLinks">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.PublishedTaskLinkCollection TaskLinks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ProjectServer.Client.PublishedTaskLinkCollection TaskLinks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.TaskLinks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TaskLinks As PublishedTaskLinkCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ProjectServer::Client::PublishedTaskLinkCollection ^ TaskLinks { Microsoft::ProjectServer::Client::PublishedTaskLinkCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TaskLinks : Microsoft.ProjectServer.Client.PublishedTaskLinkCollection" Usage="Microsoft.ProjectServer.Client.PublishedProject.TaskLinks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.PublishedTaskLinkCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of task links for the project. </summary>
        <value>A collection of <b>PublishedTaskLink</b> objects.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tasks">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.PublishedTaskCollection Tasks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.ProjectServer.Client.PublishedTaskCollection Tasks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.Tasks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Tasks As PublishedTaskCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ProjectServer::Client::PublishedTaskCollection ^ Tasks { Microsoft::ProjectServer::Client::PublishedTaskCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Tasks : Microsoft.ProjectServer.Client.PublishedTaskCollection" Usage="Microsoft.ProjectServer.Client.PublishedProject.Tasks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.PublishedTaskCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the collection of tasks for the project.</summary>
        <value>A collection of <b>PublishedTask</b> objects.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackingMode">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.TrackingMode TrackingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.ProjectServer.Client.TrackingMode TrackingMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.TrackingMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrackingMode As TrackingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::ProjectServer::Client::TrackingMode TrackingMode { Microsoft::ProjectServer::Client::TrackingMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TrackingMode : Microsoft.ProjectServer.Client.TrackingMode" Usage="Microsoft.ProjectServer.Client.PublishedProject.TrackingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.TrackingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the default tracking method for all assignments in the project.</summary>
        <value>A numerical value that represents the tracking method that is used.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateVisibilityCustomFields">
      <MemberSignature Language="C#" Value="public Microsoft.ProjectServer.Client.QueueJob UpdateVisibilityCustomFields ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.ProjectServer.Client.QueueJob UpdateVisibilityCustomFields() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.ProjectServer.Client.PublishedProject.UpdateVisibilityCustomFields" />
      <MemberSignature Language="VB.NET" Value="Public Function UpdateVisibilityCustomFields () As QueueJob" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::ProjectServer::Client::QueueJob ^ UpdateVisibilityCustomFields();" />
      <MemberSignature Language="F#" Value="member this.UpdateVisibilityCustomFields : unit -&gt; Microsoft.ProjectServer.Client.QueueJob" Usage="publishedProject.UpdateVisibilityCustomFields " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.ProjectServer.Client.QueueJob</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Updates the custom fields for a project in visibility mode.</summary>
        <returns>A <b>QueueJob</b> object that contains information about the queued job. If the queue job is successful, the Project Server Queuing Service saves the published version of the project.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WeekStartDay">
      <MemberSignature Language="C#" Value="public short WeekStartDay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 WeekStartDay" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.WeekStartDay" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WeekStartDay As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short WeekStartDay { short get(); };" />
      <MemberSignature Language="F#" Value="member this.WeekStartDay : int16" Usage="Microsoft.ProjectServer.Client.PublishedProject.WeekStartDay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the day of the week on which a work week starts.</summary>
        <value>A numerical value that represents a day of the week.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WinprojVersion">
      <MemberSignature Language="C#" Value="public decimal WinprojVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Decimal WinprojVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.ProjectServer.Client.PublishedProject.WinprojVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WinprojVersion As Decimal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Decimal WinprojVersion { System::Decimal get(); };" />
      <MemberSignature Language="F#" Value="member this.WinprojVersion : decimal" Usage="Microsoft.ProjectServer.Client.PublishedProject.WinprojVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.ProjectServer.Client</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.SharePoint.Client.Remote</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the version of Project Professional that created the published project.</summary>
        <value>A decimal number.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>